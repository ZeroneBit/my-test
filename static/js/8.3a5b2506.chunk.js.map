{"version":3,"sources":["services/MyPeer.js","../node_modules/peerjs/dist sync","components/MyFileSharer.js","services/MyEnums.js"],"names":["MyPeer","_this","Object","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","peer","pairs","outgoing","_initializePeer","remoteId","_ensureConnection","conn","console","log","open","message","type","EventTypes","Request_File_Infos","send","JSON","stringify","PeerEvents","Info_Got","files","_this2","_loop","i","f","item","findIndex","o","name","push","size","length","Peer","debug","confi","iceServers","url","credential","username","on","_peerOpen","bind","_peerConnection","_peerDisconnected","_peerClose","_peerError","id","emit","Peer_Opened","pair","_initializeConnection","err","error","callback","connect","openCallback","_this3","data","undefined","byteLength","_onJSONData","parse","_connError","_connClose","Response_File_INfos","payload","incoming","EventEmitter","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","MyFileSharer","props","textFieldRef","React","createRef","state","progress","receiverUrl","myPeer","initializeMyPeer","selfId","setState","concat","window","location","event","target","setOutgingFiles","value","select","document","execCommand","snackbarOpen","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","buttonInput","multiple","onChange","selectFile","htmlFor","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","variant","component","button","color","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","label","placeholder","margin","fullWidth","inputRef","disabled","onClick","oCopy","Component","withStyles","theme","spacing","display","withTheme"],"mappings":"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","file":"static/js/8.3a5b2506.chunk.js","sourcesContent":["import { EventEmitter } from 'eventemitter3';\r\nimport Peer from 'peerjs';\r\n\r\nimport { EventTypes, PeerEvents } from './MyEnums';\r\n\r\nexport default class MyPeer extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.peer = null;\r\n        this.pairs = {};\r\n        this.outgoing = [];\r\n\r\n        this._initializePeer();\r\n    }\r\n\r\n    //publics\r\n    requestFileInfos(remoteId) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            console.log(\"sending request \" + conn.open);\r\n            const message = {\r\n                type: EventTypes.Request_File_Infos,\r\n            };\r\n            conn.send(JSON.stringify(message));\r\n        });\r\n\r\n        return PeerEvents.Info_Got;\r\n    }\r\n\r\n    setOutgingFiles(files) {\r\n        if (files) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files.item(i);\r\n                if (this.outgoing.findIndex(o => o.name == f.name) < 0) {\r\n                    this.outgoing.push({ name: f.name, size: f.size, type: f.type });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //privates\r\n    _initializePeer() {\r\n        this.peer = new Peer(null, {\r\n            debug: 3,\r\n            confi: {\r\n                'iceServers': [\r\n                    { url: 'stun:stun.services.mozilla.com' },\r\n                    { url: 'turn:numb.viagenie.ca', credential: 'muazkh', username: 'webrtc@live.com' }\r\n                ],\r\n            },\r\n        });\r\n\r\n        this.peer.on('open', this._peerOpen.bind(this));\r\n        this.peer.on('connection', this._peerConnection.bind(this));\r\n        this.peer.on('disconnected', this._peerDisconnected.bind(this));\r\n        this.peer.on('close', this._peerClose.bind(this));\r\n        this.peer.on('error', this._peerError.bind(this));\r\n    }\r\n    _peerOpen(id) {\r\n        this.emit(PeerEvents.Peer_Opened, id);\r\n    }\r\n    _peerConnection(conn) {\r\n        let pair = this.pairs[conn.peer];\r\n        if (!pair || !pair.conn || !pair.conn.open) {\r\n            this.pairs[conn.peer] = { conn };\r\n            console.log(\"_peerConnection \" + conn.open);\r\n            this._initializeConnection(conn);\r\n        }\r\n    }\r\n    _peerDisconnected() { }\r\n    _peerClose() { }\r\n    _peerError(err) {\r\n        console.error(\"Peer error \" + err.type);\r\n        console.error(err);\r\n     }\r\n\r\n    _ensureConnection(remoteId, callback) {\r\n        let pair = this.pairs[remoteId];\r\n        if (!pair) {\r\n            this.pairs[remoteId] = {};\r\n            pair = this.pairs[remoteId];\r\n        }\r\n        if (!pair.conn || !pair.conn.open) {\r\n            pair.conn = this.peer.connect(remoteId)\r\n            console.log(\"this.peer.connect\" + pair.conn.open);\r\n            this._initializeConnection(pair.conn, callback);\r\n            return;\r\n        }\r\n\r\n        callback && callback(pair.conn);\r\n    }\r\n    _initializeConnection(conn, openCallback) {\r\n        conn.on('open', () => {\r\n            console.log(\"conn opened\");\r\n            openCallback && openCallback(conn);\r\n        });\r\n        conn.on('data', (data) => {\r\n            if (data.byteLength !== undefined) {\r\n\r\n            } else {\r\n                this._onJSONData(JSON.parse(data), conn);\r\n            }\r\n        });\r\n        conn.on('error', (err) => { this._connError(err, conn); });\r\n        conn.on('close', () => { this._connClose(conn); });\r\n    }\r\n\r\n    _connError(err, conn) {\r\n        console.error(err);\r\n     }\r\n    _connClose(conn) { \r\n        console.error(\"conn closed\");\r\n    }\r\n\r\n    _onJSONData(data, conn) {\r\n        switch (data.type) {\r\n            case EventTypes.Request_File_Infos: {\r\n                const message = {\r\n                    type: EventTypes.Response_File_INfos,\r\n                    payload: this.outgoing,\r\n                };\r\n                conn.send(JSON.stringify(message));\r\n            } break;\r\n            case EventTypes.Response_File_INfos: {\r\n                let pair = this.pairs[conn.peer];\r\n                pair.incoming = data.payload;\r\n\r\n                this.emit(PeerEvents.Info_Got, conn.peer, data.payload);\r\n            } break;\r\n            case '': { } break;\r\n            default: console.error('Unknown message: ' + data);\r\n        }\r\n    }\r\n\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 113;","import React from 'react';\r\nimport { Button, LinearProgress, TextField } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MyPeer from '../services/MyPeer';\r\nimport {PeerEvents} from '../services/MyEnums';\r\n\r\nclass MyFileSharer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textFieldRef = React.createRef();\r\n        \r\n        this.state = {\r\n            progress: 0,\r\n            receiverUrl: '',\r\n        };\r\n\r\n        this.myPeer = null;\r\n\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.myPeer = new MyPeer();\r\n        this.initializeMyPeer();\r\n    }\r\n\r\n    initializeMyPeer(){\r\n        this.myPeer.on(PeerEvents.Peer_Opened, (selfId)=>{\r\n             console.log(selfId);\r\n             this.setState({receiverUrl: `${window.location}/${selfId}`});\r\n        });\r\n    }\r\n\r\n    selectFile(event){\r\n        let files = event.target.files;\r\n        this.myPeer.setOutgingFiles(files);\r\n    }\r\n    oCopy(event) {\r\n        if (this.textFieldRef && this.textFieldRef.value) {\r\n            this.textFieldRef.select();\r\n            document.execCommand(\"Copy\");\r\n            this.setState({ snackbarOpen: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n               <input\r\n                    id=\"button-file\"\r\n                    className={classes.buttonInput}\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.selectFile.bind(this)}\r\n                ></input>\r\n                <label htmlFor=\"button-file\">\r\n                    <Button variant=\"contained\" component=\"span\" className={classes.button} color=\"primary\">\r\n                        Select Files\r\n                    </Button>\r\n                </label>\r\n\r\n                <TextField\r\n                    label=\"Receiver Url\"\r\n                    placeholder=\"Receiver Url\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    value={this.state.receiverUrl}\r\n                    inputRef={i => { this.textFieldRef = i; }}\r\n                ></TextField>\r\n\r\n                <Button variant=\"contained\" component=\"span\" className={classes.button} \r\n                    color=\"primary\" disabled={!this.state.receiverUrl} onClick={this.oCopy.bind(this)}>\r\n                        Copy Receiver Url\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    buttonInput: {\r\n        display: 'none',\r\n    },\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MyFileSharer);","export class EventTypes {\r\n    static Request_File_Infos = 'request_file_infos';\r\n    static Response_File_INfos = 'response_file_infos';\r\n\r\n};\r\n\r\nexport class PeerEvents{\r\n    static Peer_Opened = 'peer_opened';\r\n    static Info_Got='info_got';\r\n}\r\n"],"sourceRoot":""}