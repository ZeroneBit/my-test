{"version":3,"sources":["components/MyBase64Image.js"],"names":["MyBase64Image","props","_this","Object","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","progress","snackbarOpen","showImage","textFieldRef","React","createRef","event","_this2","file","target","files","window","FileReader","setState","base64","reader","onprogress","e","lengthComputable","p","Math","floor","loaded","total","onload","result","readAsDataURL","alert","value","select","document","execCommand","_this3","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","accept","id","className","buttonInput","type","onChange","readFile","bind","htmlFor","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","variant","component","button","color","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","label","placeholder","margin","multiline","rows","fullWidth","inputRef","i","onClick","oCopy","disabled","oRestore","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","src","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","anchorOrigin","horizontal","vertical","autoHideDuration","message","onClose","handleSnackbarClose","open","Component","withStyles","theme","spacing","display","success","backgroundColor","green","withTheme"],"mappings":"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","file":"static/js/12.c98e4725.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button, LinearProgress, TextField, Snackbar, Container } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nclass MyBase64Image extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            progress: 0,\r\n            snackbarOpen: false,\r\n            showImage: false,\r\n        }\r\n\r\n        this.textFieldRef = React.createRef();\r\n    }\r\n\r\n    readFile(event) {\r\n        let source = event.target;\r\n        let file = source.files[0];\r\n        if (window.FileReader) {\r\n            this.setState({ progress: 0, base64: \"\", showImage: false });\r\n            let reader = new FileReader();\r\n            reader.onprogress = (e) => {\r\n                if (e.lengthComputable) {\r\n                    let p = Math.floor(e.loaded * 100 / e.total);\r\n                    if (p >= 100) { p = 95; }\r\n                    this.setState({ progress: p });\r\n                }\r\n            };\r\n            reader.onload = (e) => {\r\n                this.setState({ base64: e.target.result }, () => {\r\n                    this.setState({ progress: 100 });\r\n                });\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        else {\r\n            alert(\"Not supported by your browser!\");\r\n        }\r\n    }\r\n\r\n    oCopy(event) {\r\n        if (this.textFieldRef && this.textFieldRef.value) {\r\n            this.textFieldRef.select();\r\n            document.execCommand(\"Copy\");\r\n            this.setState({ snackbarOpen: true });\r\n        }\r\n    }\r\n\r\n    oRestore(event) {\r\n        this.setState({ showImage: true });\r\n    }\r\n\r\n    handleSnackbarClose(event) {\r\n        this.setState({ snackbarOpen: false });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <input\r\n                        accept=\"image/*\"\r\n                        id=\"button-file\"\r\n                        className={classes.buttonInput}\r\n                        type=\"file\"\r\n                        onChange={this.readFile.bind(this)}\r\n                    />\r\n                    <label htmlFor=\"button-file\">\r\n                        <Button variant=\"contained\" component=\"span\" className={classes.button} color=\"primary\">\r\n                            Select\r\n                        </Button>\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <LinearProgress variant=\"determinate\" color=\"primary\" value={this.state.progress}></LinearProgress>\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                        label=\"Base64\"\r\n                        placeholder=\"Base64\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        multiline\r\n                        rows=\"3\"\r\n                        fullWidth\r\n                        value={this.state.base64}\r\n                        inputRef={i => { this.textFieldRef = i; }}\r\n                    ></TextField>\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" className={classes.button} color=\"primary\" onClick={this.oCopy.bind(this)}>\r\n                        Copy All\r\n                    </Button>\r\n                    <Button variant=\"contained\" className={classes.button} color=\"secondary\" disabled={!this.state.base64} onClick={this.oRestore.bind(this)}>\r\n                        Restore to image\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    <Container>\r\n                        {\r\n                            this.state.showImage && this.state.base64 &&\r\n                            <img src={this.state.base64}></img>\r\n                        }\r\n                    </Container>\r\n                </div>\r\n\r\n                <div>\r\n                    <Snackbar\r\n                        anchorOrigin={{ horizontal: \"center\", vertical: \"top\" }}\r\n                        autoHideDuration={3000}\r\n                        message=\"Copied Successfully\"\r\n                        onClose={this.handleSnackbarClose.bind(this)}\r\n                        open={this.state.snackbarOpen}\r\n                    ></Snackbar>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    buttonInput: {\r\n        display: 'none',\r\n    },\r\n\r\n    success: {\r\n        backgroundColor: green[600],\r\n    }\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MyBase64Image);"],"sourceRoot":""}