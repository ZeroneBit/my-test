{"version":3,"sources":["services/MyFile.js","services/MyPeer.js","../node_modules/peerjs/dist sync","components/MyFileSharer.js","services/MyEnums.js"],"names":["MyFile","options","Object","classCallCheck","this","size","name","lastAppendTime","Date","received","fileStream","writer","data","done","_this","_ensureFileStreamWriter","reader","Blob","stream","getReader","pump","read","then","res","speed","_calculateSpeed","byteLength","progress","_calculateProgress","write","value","close","abort","time","milliseconds","getTime","callback","_this2","_polifill","streamSaver","WritableStream","window","WebStreamsPolyfill","createWriteStream","getWriter","defineProperty","prototype","configurable","enumerable","writable","Response","body","js","document","createElement","setAttribute","async","onreadystatechange","onload","readyState","test","getElementsByTagName","appendChild","MyPeer","possibleConstructorReturn","getPrototypeOf","call","CHUNK_SIZE","peer","pairs","outgoing","_initializePeer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","pair","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","incoming","ic","file","err","return","remoteId","_ensureConnection","conn","message","type","EventTypes","Request_File_Infos","send","PeerEvents","Info_Got","fileInfo","inc","find","f","assign","_requestFileChunk","files","_loop","i","item","findIndex","o","push","length","Peer","debug","config","iceServers","url","credential","username","on","_peerOpen","bind","_peerConnection","_peerDisconnected","_peerClose","_peerError","id","emit","Peer_Opened","open","console","log","_initializeConnection","error","connect","openCallback","_this3","_onJSONData","_connError","_connClose","Response_File_INfos","payload","Array","from","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop2","_iterator3","Request_File_Chunk","_sendFileChunk","Response_File_Chunk","_receiveFileChunk","chunkIndex","index","_this4","last","iFile","append","File_Got","File_Progress","FileReader","blob","isLastChunk","start","end","slicedBlob","slice","mozSlice","webkitSlice","event","DONE","blockBuffer","target","result","readAsArrayBuffer","EventEmitter","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","MyFileSharer","props","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","textFieldRef","React","createRef","state","receiverUrl","myPeer","initializeMyPeer","selfId","setState","concat","location","setOutgingFiles","select","execCommand","snackbarOpen","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","className","buttonInput","multiple","onChange","selectFile","htmlFor","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","variant","component","button","color","map","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","label","placeholder","margin","fullWidth","inputRef","disabled","onClick","oCopy","Component","withStyles","theme","spacing","display","withTheme"],"mappings":"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","file":"static/js/9.7ed834a3.chunk.js","sourcesContent":["import streamSaver from 'streamsaver';\r\n\r\nexport default class MyFile {\r\n    constructor(options) {\r\n        this.size = options.size;\r\n        this.name = options.name;\r\n\r\n        this.lastAppendTime = new Date();\r\n        this.received = 0;\r\n\r\n        this.fileStream = null;\r\n        this.writer = null;\r\n    }\r\n\r\n    append(data, done) {\r\n        this._ensureFileStreamWriter((writer) => {\r\n            const blob = new Blob([data]);\r\n            const readableStream = blob.stream();\r\n            const reader = readableStream.getReader();\r\n            const pump = () => reader.read()\r\n                .then(res => {\r\n                    if (res.done) {\r\n                        let speed = this._calculateSpeed(data.byteLength);\r\n                        let progress = this._calculateProgress(data.byteLength);\r\n                        done(speed, progress);\r\n                    } else {\r\n                        writer.write(res.value).then(pump);\r\n                    }\r\n                });\r\n\r\n            pump();\r\n        });\r\n    }\r\n\r\n    close() {\r\n        if (this.writer) {\r\n            this.writer.close();\r\n            this.writer = null;\r\n        }\r\n    }\r\n\r\n    abort() {\r\n        if (this.writer) {\r\n            this.fileStream.abort();\r\n            this.writer.abort();\r\n        }\r\n    }\r\n\r\n    _calculateProgress(byteLength) {\r\n        this.received += byteLength;\r\n        let progress = 100 * this.received / this.size;\r\n\r\n        return progress;\r\n    }\r\n\r\n    _calculateSpeed(byteLength) {\r\n        let time = new Date();\r\n        let milliseconds = time.getTime() - this.lastAppendTime.getTime();\r\n\r\n        this.lastAppendTime = time;\r\n\r\n        let speed = 1000 * byteLength / milliseconds;\r\n\r\n        return speed;\r\n    }\r\n\r\n    _ensureFileStreamWriter(callback) {\r\n        if (this.writer) {\r\n            callback && callback(this.writer);\r\n        } else {\r\n            this._polifill(() => {\r\n                streamSaver.WritableStream = window.WritableStream || window.WebStreamsPolyfill.WritableStream;\r\n                this.fileStream = streamSaver.createWriteStream(\r\n                    this.name,\r\n                    { size: this.size, }\r\n                );\r\n                this.writer = this.fileStream.getWriter();\r\n                callback && callback(this.writer);\r\n            });\r\n        }\r\n    }\r\n\r\n    _polifill(callback) {\r\n        if (callback.done) {\r\n            callback();\r\n        } else {\r\n            Object.defineProperty(Blob.prototype, 'stream', {\r\n                configurable: true,\r\n                enumerable: true,\r\n                writable: true,\r\n                value: function stream() {\r\n                    return new Response(this).body;\r\n                }\r\n            });\r\n\r\n            let js = document.createElement('script');\r\n            js.setAttribute('src', 'https://cdn.jsdelivr.net/npm/web-streams-polyfill@2.0.2/dist/ponyfill.min.js');\r\n            js.async = true;\r\n            js.onreadystatechange = js.onload = () => {\r\n                if (!callback.done && (!js.readyState || /loaded|complete/.test(js.readyState))) {\r\n                    callback.done = true;\r\n                    callback();\r\n                }\r\n            };\r\n            document.getElementsByTagName('head')[0].appendChild(js);\r\n        }\r\n    }\r\n}","import { EventEmitter } from 'eventemitter3';\r\nimport Peer from 'peerjs';\r\n\r\nimport { EventTypes, PeerEvents } from './MyEnums';\r\nimport MyFile from './MyFile';\r\n\r\nexport default class MyPeer extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.CHUNK_SIZE = 500 * 1024;\r\n\r\n        this.peer = null;\r\n        this.pairs = {};\r\n        this.outgoing = [];\r\n\r\n        this._initializePeer();\r\n    }\r\n\r\n    //publics\r\n\r\n    abortFiles() {\r\n        for (let pair of this.pairs.values()) {\r\n            for (let ic of pair.incoming) {\r\n                if (ic.file) {\r\n                    ic.abort();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    requestFileInfos(remoteId) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            const message = {\r\n                type: EventTypes.Request_File_Infos,\r\n            };\r\n            conn.send(message);\r\n        });\r\n\r\n        return PeerEvents.Info_Got;\r\n    }\r\n\r\n    downloadFile(remoteId, fileInfo) {\r\n        let inc = this.pairs[remoteId].incoming.find(f => f.name === fileInfo.name);\r\n        Object.assign(inc, {\r\n            file: new MyFile({ name: inc.name, size: inc.size }),\r\n        });\r\n\r\n        this._requestFileChunk(remoteId, fileInfo, 0);\r\n    }\r\n\r\n    setOutgingFiles(files) {\r\n        if (files) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files.item(i);\r\n                if (this.outgoing.findIndex(o => o.name == f.name) < 0) {\r\n                    this.outgoing.push(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //privates\r\n    _initializePeer() {\r\n        this.peer = new Peer(null, {\r\n            debug: 3,\r\n            config: {\r\n                'iceServers': [\r\n                    { url: 'stun:stun.l.google.com:19302' },\r\n                    {\r\n                        url: 'turn:numb.viagenie.ca',\r\n                        credential: 'muazkh',\r\n                        username: 'webrtc@live.com'\r\n                    },\r\n                    {\r\n                        url: 'turn:192.158.29.39:3478?transport=udp',\r\n                        credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                        username: '28224511:1379330808'\r\n                    },\r\n                    {\r\n                        url: 'turn:192.158.29.39:3478?transport=tcp',\r\n                        credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                        username: '28224511:1379330808'\r\n                    }\r\n                ],\r\n            },\r\n        });\r\n\r\n        this.peer.on('open', this._peerOpen.bind(this));\r\n        this.peer.on('connection', this._peerConnection.bind(this));\r\n        this.peer.on('disconnected', this._peerDisconnected.bind(this));\r\n        this.peer.on('close', this._peerClose.bind(this));\r\n        this.peer.on('error', this._peerError.bind(this));\r\n    }\r\n    _peerOpen(id) {\r\n        this.emit(PeerEvents.Peer_Opened, id);\r\n    }\r\n    _peerConnection(conn) {\r\n        let pair = this.pairs[conn.peer];\r\n        if (!pair || !pair.conn || !pair.conn.open) {\r\n            this.pairs[conn.peer] = { conn };\r\n            console.log(\"_peerConnection \" + conn.open);\r\n            this._initializeConnection(conn);\r\n        }\r\n    }\r\n    _peerDisconnected() { }\r\n    _peerClose() { }\r\n    _peerError(err) {\r\n        console.error(\"Peer error \" + err.type);\r\n        console.error(err);\r\n    }\r\n\r\n    _ensureConnection(remoteId, callback) {\r\n        let pair = this.pairs[remoteId];\r\n        if (!pair) {\r\n            this.pairs[remoteId] = {};\r\n            pair = this.pairs[remoteId];\r\n        }\r\n        if (!pair.conn || !pair.conn.open) {\r\n            pair.conn = this.peer.connect(remoteId)\r\n            console.log(\"this.peer.connect\" + pair.conn.open);\r\n            this._initializeConnection(pair.conn, callback);\r\n            return;\r\n        }\r\n\r\n        callback && callback(pair.conn);\r\n    }\r\n    _initializeConnection(conn, openCallback) {\r\n        conn.on('open', () => {\r\n            console.log(\"conn opened\");\r\n            openCallback && openCallback(conn);\r\n        });\r\n        conn.on('data', (data) => {\r\n            this._onJSONData(data, conn);\r\n        });\r\n        conn.on('error', (err) => { this._connError(err, conn); });\r\n        conn.on('close', () => { this._connClose(conn); });\r\n    }\r\n\r\n    _connError(err, conn) {\r\n        console.error(err);\r\n    }\r\n    _connClose(conn) {\r\n        console.error(\"conn closed\");\r\n    }\r\n\r\n    _onJSONData(data, conn) {\r\n        switch (data.type) {\r\n            case EventTypes.Request_File_Infos: {\r\n                const message = {\r\n                    type: EventTypes.Response_File_INfos,\r\n                    payload: Array.from(this.outgoing, function (f) { return { name: f.name, size: f.size, type: f.type, peer: this.id }; }, this.peer),\r\n                };\r\n                conn.send(message);\r\n            } break;\r\n            case EventTypes.Response_File_INfos: {\r\n                let pair = this.pairs[conn.peer];\r\n                if (pair.incoming) {\r\n                    for (let f of data.payload) {\r\n                        let inc = pair.incoming.find(i => i.name === f.name);\r\n                        if (!inc) {\r\n                            pair.incoming.push(f);\r\n                        }\r\n                    }\r\n                } else {\r\n                    pair.incoming = data.payload;\r\n                }\r\n\r\n                this.emit(PeerEvents.Info_Got, conn.peer, data.payload);\r\n            } break;\r\n\r\n            case EventTypes.Request_File_Chunk: {\r\n                this._sendFileChunk(data.payload, conn);\r\n            } break;\r\n            case EventTypes.Response_File_Chunk: {\r\n                this._receiveFileChunk(data.payload, conn);\r\n            } break;\r\n            default: console.error('Unknown message: ' + data);\r\n        }\r\n    }\r\n\r\n    _requestFileChunk(remoteId, fileInfo, chunkIndex) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            const message = {\r\n                type: EventTypes.Request_File_Chunk,\r\n                payload: {\r\n                    fileInfo: {\r\n                        name: fileInfo.name,\r\n                    },\r\n                    index: chunkIndex\r\n                },\r\n            };\r\n            conn.send(message);\r\n        });\r\n    }\r\n\r\n    _receiveFileChunk(payload, conn) {\r\n        let { index, fileInfo, data, last } = payload;\r\n        let iFile = this.pairs[conn.peer].incoming.find(f => f.name === fileInfo.name);\r\n        iFile.file.append(data, (speed, progress) => {\r\n            if (last) {\r\n                iFile.file.close();\r\n                this.emit(PeerEvents.File_Got, iFile);\r\n            }\r\n            else {\r\n                this.emit(PeerEvents.File_Progress, iFile, speed, progress);\r\n\r\n                this._requestFileChunk(conn.peer, fileInfo, index + 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    _sendFileChunk(payload, conn) {\r\n        const reader = new FileReader();\r\n\r\n        let fileInfo = payload.fileInfo;\r\n        let index = payload.index;\r\n        let blob = this.outgoing.find(f => f.name === fileInfo.name);\r\n        let isLastChunk = false;\r\n        let start = index * this.CHUNK_SIZE;\r\n        let end = start + this.CHUNK_SIZE;\r\n        if (end >= blob.size) {\r\n            end = blob.size;\r\n            isLastChunk = true;\r\n        }\r\n        let slice = blob.slice || blob.mozSlice || blob.webkitSlice;\r\n        let slicedBlob = slice.call(blob, start, end);\r\n\r\n        reader.onload = function (event) {\r\n            if (reader.readyState !== FileReader.DONE) {\r\n                return;\r\n            }\r\n            const blockBuffer = event.target.result;\r\n            const message = {\r\n                type: EventTypes.Response_File_Chunk,\r\n                payload: {\r\n                    index: index,\r\n                    fileInfo: fileInfo,\r\n                    data: blockBuffer,\r\n                    last: isLastChunk,\r\n                },\r\n            };\r\n            conn.send(message);\r\n        }\r\n        reader.readAsArrayBuffer(slicedBlob);\r\n    }\r\n\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 117;","import React from 'react';\r\nimport { Button, LinearProgress, TextField } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MyPeer from '../services/MyPeer';\r\nimport {PeerEvents} from '../services/MyEnums';\r\n\r\nclass MyFileSharer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textFieldRef = React.createRef();\r\n\r\n        this.state = {\r\n            progress: 0,\r\n            receiverUrl: '',\r\n            outgoing: [],\r\n        };\r\n\r\n        this.myPeer = null;\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.myPeer = new MyPeer();\r\n        this.initializeMyPeer();\r\n    }\r\n\r\n    initializeMyPeer(){\r\n        this.myPeer.on(PeerEvents.Peer_Opened, (selfId)=>{\r\n             console.log(selfId);\r\n             this.setState({receiverUrl: `${window.location}/${selfId}`});\r\n        });\r\n    }\r\n\r\n    selectFile(event){\r\n        let files = event.target.files;\r\n        this.myPeer.setOutgingFiles(files);\r\n        this.setState({outgoing: this.myPeer.outgoing});\r\n    }\r\n    oCopy(event) {\r\n        if (this.textFieldRef && this.textFieldRef.value) {\r\n            this.textFieldRef.select();\r\n            document.execCommand(\"Copy\");\r\n            this.setState({ snackbarOpen: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n               <input\r\n                    id=\"button-file\"\r\n                    className={classes.buttonInput}\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.selectFile.bind(this)}\r\n                ></input>\r\n                <label htmlFor=\"button-file\">\r\n                    <Button variant=\"contained\" component=\"span\" className={classes.button} color=\"primary\">\r\n                        Select Files\r\n                    </Button>\r\n                </label>\r\n                {\r\n                    this.state.outgoing && this.state.outgoing.map((f) =>{\r\n                        return <div>{f.name}</div>\r\n                    })\r\n                }\r\n                <TextField\r\n                    label=\"Receiver Url\"\r\n                    placeholder=\"Receiver Url\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    value={this.state.receiverUrl}\r\n                    inputRef={i => { this.textFieldRef = i; }}\r\n                ></TextField>\r\n\r\n                <Button variant=\"contained\" component=\"span\" className={classes.button} \r\n                    color=\"primary\" disabled={!this.state.receiverUrl} onClick={this.oCopy.bind(this)}>\r\n                        Copy Receiver Url\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    buttonInput: {\r\n        display: 'none',\r\n    },\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MyFileSharer);","export class EventTypes {\r\n    static Request_File_Infos = 'request_file_infos';\r\n    static Response_File_INfos = 'response_file_infos';\r\n    static Request_File_Chunk = 'request_download_file_chunk';\r\n    static Response_File_Chunk = 'response_download_file_chunk';\r\n};\r\n\r\nexport class PeerEvents {\r\n    static Peer_Opened = 'peer_opened';\r\n    static Info_Got = 'info_got';\r\n    static File_Got = 'file_got';\r\n    static File_Progress = 'file_progress';\r\n}\r\n"],"sourceRoot":""}