{"version":3,"sources":["services/MyFile.js","services/MyPeer.js","../node_modules/peerjs/dist sync","components/MyFileSharer.js","services/MyEnums.js"],"names":["MyFile","options","Object","classCallCheck","this","size","name","lastAppendTime","Date","received","fileStream","writer","data","done","_this","_ensureFileStreamWriter","reader","Blob","stream","getReader","pump","read","then","res","speed","_calculateSpeed","byteLength","progress","_calculateProgress","write","value","close","abort","time","milliseconds","getTime","callback","_this2","_polifill","streamSaver","WritableStream","window","WebStreamsPolyfill","createWriteStream","getWriter","defineProperty","prototype","configurable","enumerable","writable","Response","body","js","document","createElement","setAttribute","async","onreadystatechange","onload","readyState","test","getElementsByTagName","appendChild","MyPeer","possibleConstructorReturn","getPrototypeOf","call","CHUNK_SIZE","peer","pairs","outgoing","messageCache","_initializePeer","alert","peerjs","util","browser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","pair","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","incoming","ic","file","err","return","remoteId","_ensureConnection","conn","console","log","EventTypes","Request_File_Infos","open","message","type","send","PeerEvents","Info_Got","fileInfo","inc","find","f","assign","_requestFileChunk","files","_loop","i","item","findIndex","o","push","length","Peer","debug","config","iceServers","urls","credential","username","on","_peerOpen","bind","_peerConnection","_peerDisconnected","_peerClose","_peerError","id","emit","Peer_Opened","_this3","_initializeConnection","_ClearCachedMessages","error","connect","openCallback","_this4","_onJSONData","_connError","_connClose","Response_File_INfos","payload","Array","from","_SendMessage","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop2","_iterator3","Request_File_Chunk","_sendFileChunk","Response_File_Chunk","_receiveFileChunk","chunkIndex","_this5","index","_this6","last","iFile","append","File_Got","File_Progress","_this7","FileReader","blob","isLastChunk","start","end","slicedBlob","slice","mozSlice","webkitSlice","event","DONE","blockBuffer","target","result","readAsArrayBuffer","messages","_this8","forEach","EventEmitter","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","MyFileSharer","props","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","textFieldRef","React","createRef","state","receiverUrl","myPeer","initializeMyPeer","selfId","setState","concat","location","setOutgingFiles","select","execCommand","snackbarOpen","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","className","buttonInput","multiple","onChange","selectFile","htmlFor","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","variant","component","button","color","map","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","label","placeholder","margin","fullWidth","inputRef","disabled","onClick","oCopy","Component","withStyles","theme","spacing","display","withTheme"],"mappings":"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","file":"static/js/9.c65e71b1.chunk.js","sourcesContent":["import streamSaver from 'streamsaver';\r\n\r\nexport default class MyFile {\r\n    constructor(options) {\r\n        this.size = options.size;\r\n        this.name = options.name;\r\n\r\n        this.lastAppendTime = new Date();\r\n        this.received = 0;\r\n\r\n        this.fileStream = null;\r\n        this.writer = null;\r\n    }\r\n\r\n    append(data, done) {\r\n        this._ensureFileStreamWriter((writer) => {\r\n            const blob = new Blob([data]);\r\n            const readableStream = blob.stream();\r\n            const reader = readableStream.getReader();\r\n            const pump = () => reader.read()\r\n                .then(res => {\r\n                    if (res.done) {\r\n                        let speed = this._calculateSpeed(data.byteLength);\r\n                        let progress = this._calculateProgress(data.byteLength);\r\n                        done(speed, progress);\r\n                    } else {\r\n                        writer.write(res.value).then(pump);\r\n                    }\r\n                });\r\n\r\n            pump();\r\n        });\r\n    }\r\n\r\n    close() {\r\n        if (this.writer) {\r\n            this.writer.close();\r\n            this.writer = null;\r\n        }\r\n    }\r\n\r\n    abort() {\r\n        if (this.writer) {\r\n            this.fileStream.abort();\r\n            this.writer.abort();\r\n        }\r\n    }\r\n\r\n    _calculateProgress(byteLength) {\r\n        this.received += byteLength;\r\n        let progress = 100 * this.received / this.size;\r\n\r\n        return progress;\r\n    }\r\n\r\n    _calculateSpeed(byteLength) {\r\n        let time = new Date();\r\n        let milliseconds = time.getTime() - this.lastAppendTime.getTime();\r\n\r\n        this.lastAppendTime = time;\r\n\r\n        let speed = 1000 * byteLength / milliseconds;\r\n\r\n        return speed;\r\n    }\r\n\r\n    _ensureFileStreamWriter(callback) {\r\n        if (this.writer) {\r\n            callback && callback(this.writer);\r\n        } else {\r\n            this._polifill(() => {\r\n                streamSaver.WritableStream = window.WritableStream || window.WebStreamsPolyfill.WritableStream;\r\n                this.fileStream = streamSaver.createWriteStream(\r\n                    this.name,\r\n                    { size: this.size, }\r\n                );\r\n                this.writer = this.fileStream.getWriter();\r\n                callback && callback(this.writer);\r\n            });\r\n        }\r\n    }\r\n\r\n    _polifill(callback) {\r\n        if (callback.done) {\r\n            callback();\r\n        } else {\r\n            Object.defineProperty(Blob.prototype, 'stream', {\r\n                configurable: true,\r\n                enumerable: true,\r\n                writable: true,\r\n                value: function stream() {\r\n                    return new Response(this).body;\r\n                }\r\n            });\r\n\r\n            let js = document.createElement('script');\r\n            js.setAttribute('src', 'https://cdn.jsdelivr.net/npm/web-streams-polyfill@2.0.2/dist/ponyfill.min.js');\r\n            js.async = true;\r\n            js.onreadystatechange = js.onload = () => {\r\n                if (!callback.done && (!js.readyState || /loaded|complete/.test(js.readyState))) {\r\n                    callback.done = true;\r\n                    callback();\r\n                }\r\n            };\r\n            document.getElementsByTagName('head')[0].appendChild(js);\r\n        }\r\n    }\r\n}","import { EventEmitter } from 'eventemitter3';\r\nimport Peer from 'peerjs';\r\n\r\nimport { EventTypes, PeerEvents } from './MyEnums';\r\nimport MyFile from './MyFile';\r\n\r\nexport default class MyPeer extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.CHUNK_SIZE = 500 * 1024;\r\n\r\n        this.peer = null;\r\n        this.pairs = {};\r\n        this.outgoing = [];\r\n        this.messageCache = {};\r\n\r\n        this._initializePeer();\r\n\r\n        alert(window.peerjs.util.browser);\r\n    }\r\n\r\n    //publics\r\n\r\n    abortFiles() {\r\n        for (let pair of this.pairs.values()) {\r\n            for (let ic of pair.incoming) {\r\n                if (ic.file) {\r\n                    ic.abort();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    requestFileInfos(remoteId) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            console.log(\"Sending \" + EventTypes.Request_File_Infos + conn.open);\r\n            const message = {\r\n                type: EventTypes.Request_File_Infos,\r\n            };\r\n            conn.send(message);\r\n        });\r\n\r\n        return PeerEvents.Info_Got;\r\n    }\r\n\r\n    downloadFile(remoteId, fileInfo) {\r\n        let inc = this.pairs[remoteId].incoming.find(f => f.name === fileInfo.name);\r\n        Object.assign(inc, {\r\n            file: new MyFile({ name: inc.name, size: inc.size }),\r\n        });\r\n\r\n        this._requestFileChunk(remoteId, fileInfo, 0);\r\n    }\r\n\r\n    setOutgingFiles(files) {\r\n        if (files) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files.item(i);\r\n                if (this.outgoing.findIndex(o => o.name == f.name) < 0) {\r\n                    this.outgoing.push(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //privates\r\n    _initializePeer() {\r\n        this.peer = new Peer(null, {\r\n            debug: 3,\r\n            config: {\r\n                'iceServers': [\r\n                    { urls: 'stun:stun.l.google.com:19302' },\r\n                    {\r\n                        urls: 'turn:numb.viagenie.ca',\r\n                        credential: 'muazkh',\r\n                        username: 'webrtc@live.com'\r\n                    },\r\n                    {\r\n                        urls: 'turn:192.158.29.39:3478?transport=udp',\r\n                        credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                        username: '28224511:1379330808'\r\n                    },\r\n                    {\r\n                        urls: 'turn:192.158.29.39:3478?transport=tcp',\r\n                        credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                        username: '28224511:1379330808'\r\n                    }\r\n                ],\r\n            },\r\n        });\r\n\r\n        this.peer.on('open', this._peerOpen.bind(this));\r\n        this.peer.on('connection', this._peerConnection.bind(this));\r\n        this.peer.on('disconnected', this._peerDisconnected.bind(this));\r\n        this.peer.on('close', this._peerClose.bind(this));\r\n        this.peer.on('error', this._peerError.bind(this));\r\n    }\r\n    _peerOpen(id) {\r\n        this.emit(PeerEvents.Peer_Opened, id);\r\n    }\r\n    _peerConnection(conn) {\r\n        let pair = this.pairs[conn.peer];\r\n        if (!pair || !pair.conn || !pair.conn.open) {\r\n            this.pairs[conn.peer] = { conn };\r\n            console.log(\"_peerConnection \" + conn.open);\r\n            this._initializeConnection(conn, (conn) => {\r\n                this._ClearCachedMessages(conn);\r\n            });\r\n        }\r\n    }\r\n    _peerDisconnected() { }\r\n    _peerClose() { }\r\n    _peerError(err) {\r\n        console.error(\"Peer error \" + err.type);\r\n        console.error(err);\r\n    }\r\n\r\n    _ensureConnection(remoteId, callback) {\r\n        let pair = this.pairs[remoteId];\r\n        if (!pair) {\r\n            this.pairs[remoteId] = {};\r\n            pair = this.pairs[remoteId];\r\n        }\r\n        if (!pair.conn || !pair.conn.open) {\r\n            pair.conn = this.peer.connect(remoteId)\r\n            console.log(\"this.peer.connect\" + pair.conn.open);\r\n            this._initializeConnection(pair.conn, callback);\r\n            return;\r\n        } else {\r\n            callback && callback(pair.conn);\r\n        }\r\n    }\r\n    _initializeConnection(conn, openCallback) {\r\n        conn.on('open', () => {\r\n            console.log(\"conn opened\");\r\n            openCallback && openCallback(conn);\r\n        });\r\n        conn.on('data', (data) => {\r\n            this._onJSONData(data, conn);\r\n        });\r\n        conn.on('error', (err) => { this._connError(err, conn); });\r\n        conn.on('close', () => { this._connClose(conn); });\r\n    }\r\n\r\n    _connError(err, conn) {\r\n        console.error(err);\r\n    }\r\n    _connClose(conn) {\r\n        console.error(\"conn closed\");\r\n    }\r\n\r\n    _onJSONData(data, conn) {\r\n        console.log(\"_onJSONData \" + data.type + conn.open);\r\n        switch (data.type) {\r\n            case EventTypes.Request_File_Infos: {\r\n                const message = {\r\n                    type: EventTypes.Response_File_INfos,\r\n                    payload: Array.from(this.outgoing, function (f) { return { name: f.name, size: f.size, type: f.type, peer: this.id }; }, this.peer),\r\n                };\r\n                this._SendMessage(conn, message);\r\n            } break;\r\n            case EventTypes.Response_File_INfos: {\r\n                let pair = this.pairs[conn.peer];\r\n                if (pair.incoming) {\r\n                    for (let f of data.payload) {\r\n                        let inc = pair.incoming.find(i => i.name === f.name);\r\n                        if (!inc) {\r\n                            pair.incoming.push(f);\r\n                        }\r\n                    }\r\n                } else {\r\n                    pair.incoming = data.payload;\r\n                }\r\n\r\n                this.emit(PeerEvents.Info_Got, conn.peer, data.payload);\r\n            } break;\r\n\r\n            case EventTypes.Request_File_Chunk: {\r\n                this._sendFileChunk(data.payload, conn);\r\n            } break;\r\n            case EventTypes.Response_File_Chunk: {\r\n                this._receiveFileChunk(data.payload, conn);\r\n            } break;\r\n            default: console.error('Unknown message: ' + data);\r\n        }\r\n    }\r\n\r\n    _requestFileChunk(remoteId, fileInfo, chunkIndex) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            const message = {\r\n                type: EventTypes.Request_File_Chunk,\r\n                payload: {\r\n                    fileInfo: {\r\n                        name: fileInfo.name,\r\n                    },\r\n                    index: chunkIndex\r\n                },\r\n            };\r\n            this._SendMessage(conn, message);\r\n        });\r\n    }\r\n\r\n    _receiveFileChunk(payload, conn) {\r\n        let { index, fileInfo, data, last } = payload;\r\n        let iFile = this.pairs[conn.peer].incoming.find(f => f.name === fileInfo.name);\r\n        iFile.file.append(data, (speed, progress) => {\r\n            if (last) {\r\n                iFile.file.close();\r\n                this.emit(PeerEvents.File_Got, iFile);\r\n            }\r\n            else {\r\n                this.emit(PeerEvents.File_Progress, iFile, speed, progress);\r\n\r\n                this._requestFileChunk(conn.peer, fileInfo, index + 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    _sendFileChunk(payload, conn) {\r\n        const reader = new FileReader();\r\n\r\n        let fileInfo = payload.fileInfo;\r\n        let index = payload.index;\r\n        let blob = this.outgoing.find(f => f.name === fileInfo.name);\r\n        let isLastChunk = false;\r\n        let start = index * this.CHUNK_SIZE;\r\n        let end = start + this.CHUNK_SIZE;\r\n        if (end >= blob.size) {\r\n            end = blob.size;\r\n            isLastChunk = true;\r\n        }\r\n        let slice = blob.slice || blob.mozSlice || blob.webkitSlice;\r\n        let slicedBlob = slice.call(blob, start, end);\r\n\r\n        reader.onload = (event) => {\r\n            if (reader.readyState !== FileReader.DONE) {\r\n                return;\r\n            }\r\n            const blockBuffer = event.target.result;\r\n            const message = {\r\n                type: EventTypes.Response_File_Chunk,\r\n                payload: {\r\n                    index: index,\r\n                    fileInfo: fileInfo,\r\n                    data: blockBuffer,\r\n                    last: isLastChunk,\r\n                },\r\n            };\r\n            this._SendMessage(conn, message);\r\n        }\r\n        reader.readAsArrayBuffer(slicedBlob);\r\n    }\r\n\r\n    _SendMessage(conn, message) {\r\n        if (conn.open) {\r\n            conn.send(message);\r\n        } else {\r\n            let messages = this.messageCache[conn.peer];\r\n            if (!messages) {\r\n                messages = this.messageCache[conn.peer] = [];\r\n            }\r\n            messages.push(message);\r\n        }\r\n    }\r\n    _ClearCachedMessages(conn) {\r\n        let messages = this.messageCache[conn.peer];\r\n        if (messages) {\r\n            (messages).forEach(message => {\r\n                this._SendMessage(conn, message);\r\n            });\r\n        }\r\n    }\r\n\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 117;","import React from 'react';\r\nimport { Button, LinearProgress, TextField } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MyPeer from '../services/MyPeer';\r\nimport {PeerEvents} from '../services/MyEnums';\r\n\r\nclass MyFileSharer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textFieldRef = React.createRef();\r\n\r\n        this.state = {\r\n            progress: 0,\r\n            receiverUrl: '',\r\n            outgoing: [],\r\n        };\r\n\r\n        this.myPeer = null;\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.myPeer = new MyPeer();\r\n        this.initializeMyPeer();\r\n    }\r\n\r\n    initializeMyPeer(){\r\n        this.myPeer.on(PeerEvents.Peer_Opened, (selfId)=>{\r\n             console.log(selfId);\r\n             this.setState({receiverUrl: `${window.location}/${selfId}`});\r\n        });\r\n    }\r\n\r\n    selectFile(event){\r\n        let files = event.target.files;\r\n        this.myPeer.setOutgingFiles(files);\r\n        this.setState({outgoing: this.myPeer.outgoing});\r\n    }\r\n    oCopy(event) {\r\n        if (this.textFieldRef && this.textFieldRef.value) {\r\n            this.textFieldRef.select();\r\n            document.execCommand(\"Copy\");\r\n            this.setState({ snackbarOpen: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n               <input\r\n                    id=\"button-file\"\r\n                    className={classes.buttonInput}\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.selectFile.bind(this)}\r\n                ></input>\r\n                <label htmlFor=\"button-file\">\r\n                    <Button variant=\"contained\" component=\"span\" className={classes.button} color=\"primary\">\r\n                        Select Files\r\n                    </Button>\r\n                </label>\r\n                {\r\n                    this.state.outgoing && this.state.outgoing.map((f) =>{\r\n                        return <div>{f.name}</div>\r\n                    })\r\n                }\r\n                <TextField\r\n                    label=\"Receiver Url\"\r\n                    placeholder=\"Receiver Url\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    value={this.state.receiverUrl}\r\n                    inputRef={i => { this.textFieldRef = i; }}\r\n                ></TextField>\r\n\r\n                <Button variant=\"contained\" component=\"span\" className={classes.button} \r\n                    color=\"primary\" disabled={!this.state.receiverUrl} onClick={this.oCopy.bind(this)}>\r\n                        Copy Receiver Url\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    buttonInput: {\r\n        display: 'none',\r\n    },\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MyFileSharer);","export class EventTypes {\r\n    static Request_File_Infos = 'request_file_infos';\r\n    static Response_File_INfos = 'response_file_infos';\r\n    static Request_File_Chunk = 'request_download_file_chunk';\r\n    static Response_File_Chunk = 'response_download_file_chunk';\r\n};\r\n\r\nexport class PeerEvents {\r\n    static Peer_Opened = 'peer_opened';\r\n    static Info_Got = 'info_got';\r\n    static File_Got = 'file_got';\r\n    static File_Progress = 'file_progress';\r\n}\r\n"],"sourceRoot":""}