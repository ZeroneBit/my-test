{"version":3,"sources":["services/MyFile.js","services/MyPeer.js","../node_modules/peerjs/dist sync","components/MyFileReceiver.js","services/MyEnums.js"],"names":["MyFile","options","Object","classCallCheck","this","size","name","lastAppendTime","Date","received","fileStream","writer","data","done","_this","_ensureFileStreamWriter","reader","Blob","stream","getReader","pump","read","then","res","speed","_calculateSpeed","byteLength","progress","_calculateProgress","write","value","close","abort","time","milliseconds","getTime","callback","_this2","_polifill","streamSaver","WritableStream","window","WebStreamsPolyfill","createWriteStream","getWriter","defineProperty","prototype","configurable","enumerable","writable","Response","body","js","document","createElement","setAttribute","async","onreadystatechange","onload","readyState","test","getElementsByTagName","appendChild","MyPeer","possibleConstructorReturn","getPrototypeOf","call","CHUNK_SIZE","peer","pairs","outgoing","_initializePeer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","pair","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","incoming","ic","file","err","return","remoteId","_ensureConnection","conn","message","type","EventTypes","Request_File_Infos","send","PeerEvents","Info_Got","fileInfo","inc","find","f","assign","_requestFileChunk","files","_loop","i","item","findIndex","o","push","length","Peer","debug","on","_peerOpen","bind","_peerConnection","_peerDisconnected","_peerClose","_peerError","id","emit","Peer_Opened","open","console","log","_initializeConnection","error","connect","openCallback","_this3","_onJSONData","_connError","_connClose","Response_File_INfos","payload","Array","from","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop2","_iterator3","Request_File_Chunk","_sendFileChunk","Response_File_Chunk","_receiveFileChunk","chunkIndex","index","_this4","last","iFile","append","File_Got","File_Progress","FileReader","blob","isLastChunk","start","end","slicedBlob","slice","mozSlice","webkitSlice","event","DONE","blockBuffer","target","result","readAsArrayBuffer","EventEmitter","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","MyFileReceiver","props","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","match","params","myPeer","state","peerFiles","initializeMyPeer","abortFiles","selfId","peerId","setState","concat","downloading","requestFileInfos","downloadFile","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","variant","component","className","button","color","onClick","retriveFileInfos","renderFileInfos","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","title","paperBackground","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","dense","map","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","key","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_Folder__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","primary","secondary","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","edge","aria-label","disabled","_material_ui_icons_CloudDownload__WEBPACK_IMPORTED_MODULE_17___default","React","Component","withStyles","theme","margin","spacing","buttonInput","display","backgroundColor","palette","background","paper","withTheme"],"mappings":"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","file":"static/js/8.c70c41d5.chunk.js","sourcesContent":["import streamSaver from 'streamsaver';\r\n\r\nexport default class MyFile {\r\n    constructor(options) {\r\n        this.size = options.size;\r\n        this.name = options.name;\r\n\r\n        this.lastAppendTime = new Date();\r\n        this.received = 0;\r\n\r\n        this.fileStream = null;\r\n        this.writer = null;\r\n    }\r\n\r\n    append(data, done) {\r\n        this._ensureFileStreamWriter((writer) => {\r\n            const blob = new Blob([data]);\r\n            const readableStream = blob.stream();\r\n            const reader = readableStream.getReader();\r\n            const pump = () => reader.read()\r\n                .then(res => {\r\n                    if (res.done) {\r\n                        let speed = this._calculateSpeed(data.byteLength);\r\n                        let progress = this._calculateProgress(data.byteLength);\r\n                        done(speed, progress);\r\n                    } else {\r\n                        writer.write(res.value).then(pump);\r\n                    }\r\n                });\r\n\r\n            pump();\r\n        });\r\n    }\r\n\r\n    close() {\r\n        if (this.writer) {\r\n            this.writer.close();\r\n            this.writer = null;\r\n        }\r\n    }\r\n\r\n    abort() {\r\n        if (this.writer) {\r\n            this.fileStream.abort();\r\n            this.writer.abort();\r\n        }\r\n    }\r\n\r\n    _calculateProgress(byteLength) {\r\n        this.received += byteLength;\r\n        let progress = 100 * this.received / this.size;\r\n\r\n        return progress;\r\n    }\r\n\r\n    _calculateSpeed(byteLength) {\r\n        let time = new Date();\r\n        let milliseconds = time.getTime() - this.lastAppendTime.getTime();\r\n\r\n        this.lastAppendTime = time;\r\n\r\n        let speed = 1000 * byteLength / milliseconds;\r\n\r\n        return speed;\r\n    }\r\n\r\n    _ensureFileStreamWriter(callback) {\r\n        if (this.writer) {\r\n            callback && callback(this.writer);\r\n        } else {\r\n            this._polifill(() => {\r\n                streamSaver.WritableStream = window.WritableStream || window.WebStreamsPolyfill.WritableStream;\r\n                this.fileStream = streamSaver.createWriteStream(\r\n                    this.name,\r\n                    { size: this.size, }\r\n                );\r\n                this.writer = this.fileStream.getWriter();\r\n                callback && callback(this.writer);\r\n            });\r\n        }\r\n    }\r\n\r\n    _polifill(callback) {\r\n        if (callback.done) {\r\n            callback();\r\n        } else {\r\n            Object.defineProperty(Blob.prototype, 'stream', {\r\n                configurable: true,\r\n                enumerable: true,\r\n                writable: true,\r\n                value: function stream() {\r\n                    return new Response(this).body;\r\n                }\r\n            });\r\n\r\n            let js = document.createElement('script');\r\n            js.setAttribute('src', 'https://cdn.jsdelivr.net/npm/web-streams-polyfill@2.0.2/dist/ponyfill.min.js');\r\n            js.async = true;\r\n            js.onreadystatechange = js.onload = () => {\r\n                if (!callback.done && (!js.readyState || /loaded|complete/.test(js.readyState))) {\r\n                    callback.done = true;\r\n                    callback();\r\n                }\r\n            };\r\n            document.getElementsByTagName('head')[0].appendChild(js);\r\n        }\r\n    }\r\n}","import { EventEmitter } from 'eventemitter3';\r\nimport Peer from 'peerjs';\r\n\r\nimport { EventTypes, PeerEvents } from './MyEnums';\r\nimport MyFile from './MyFile';\r\n\r\nexport default class MyPeer extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.CHUNK_SIZE = 500 * 1024;\r\n\r\n        this.peer = null;\r\n        this.pairs = {};\r\n        this.outgoing = [];\r\n\r\n        this._initializePeer();\r\n    }\r\n\r\n    //publics\r\n\r\n    abortFiles() {\r\n        for (let pair of this.pairs.values()) {\r\n            for (let ic of pair.incoming) {\r\n                if (ic.file) {\r\n                    ic.abort();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    requestFileInfos(remoteId) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            const message = {\r\n                type: EventTypes.Request_File_Infos,\r\n            };\r\n            conn.send(message);\r\n        });\r\n\r\n        return PeerEvents.Info_Got;\r\n    }\r\n\r\n    downloadFile(remoteId, fileInfo) {\r\n        let inc = this.pairs[remoteId].incoming.find(f => f.name === fileInfo.name);\r\n        Object.assign(inc, {\r\n            file: new MyFile({ name: inc.name, size: inc.size }),\r\n        });\r\n\r\n        this._requestFileChunk(remoteId, fileInfo, 0);\r\n    }\r\n\r\n    setOutgingFiles(files) {\r\n        if (files) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files.item(i);\r\n                if (this.outgoing.findIndex(o => o.name == f.name) < 0) {\r\n                    this.outgoing.push(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //privates\r\n    _initializePeer() {\r\n        this.peer = new Peer(null, {\r\n            debug: 3,\r\n            // config: {\r\n            //     'iceServers': [\r\n            //         { url: 'stun:stun.l.google.com:19302' },\r\n            //         {\r\n            //             url: 'turn:numb.viagenie.ca',\r\n            //             credential: 'muazkh',\r\n            //             username: 'webrtc@live.com'\r\n            //         },\r\n            //         {\r\n            //             url: 'turn:192.158.29.39:3478?transport=udp',\r\n            //             credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n            //             username: '28224511:1379330808'\r\n            //         },\r\n            //         {\r\n            //             url: 'turn:192.158.29.39:3478?transport=tcp',\r\n            //             credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n            //             username: '28224511:1379330808'\r\n            //         }\r\n            //     ],\r\n            // },\r\n        });\r\n\r\n        this.peer.on('open', this._peerOpen.bind(this));\r\n        this.peer.on('connection', this._peerConnection.bind(this));\r\n        this.peer.on('disconnected', this._peerDisconnected.bind(this));\r\n        this.peer.on('close', this._peerClose.bind(this));\r\n        this.peer.on('error', this._peerError.bind(this));\r\n    }\r\n    _peerOpen(id) {\r\n        this.emit(PeerEvents.Peer_Opened, id);\r\n    }\r\n    _peerConnection(conn) {\r\n        let pair = this.pairs[conn.peer];\r\n        if (!pair || !pair.conn || !pair.conn.open) {\r\n            this.pairs[conn.peer] = { conn };\r\n            console.log(\"_peerConnection \" + conn.open);\r\n            this._initializeConnection(conn);\r\n        }\r\n    }\r\n    _peerDisconnected() { }\r\n    _peerClose() { }\r\n    _peerError(err) {\r\n        console.error(\"Peer error \" + err.type);\r\n        console.error(err);\r\n    }\r\n\r\n    _ensureConnection(remoteId, callback) {\r\n        let pair = this.pairs[remoteId];\r\n        if (!pair) {\r\n            this.pairs[remoteId] = {};\r\n            pair = this.pairs[remoteId];\r\n        }\r\n        if (!pair.conn || !pair.conn.open) {\r\n            pair.conn = this.peer.connect(remoteId)\r\n            console.log(\"this.peer.connect\" + pair.conn.open);\r\n            this._initializeConnection(pair.conn, callback);\r\n            return;\r\n        }\r\n\r\n        callback && callback(pair.conn);\r\n    }\r\n    _initializeConnection(conn, openCallback) {\r\n        conn.on('open', () => {\r\n            console.log(\"conn opened\");\r\n            openCallback && openCallback(conn);\r\n        });\r\n        conn.on('data', (data) => {\r\n            this._onJSONData(data, conn);\r\n        });\r\n        conn.on('error', (err) => { this._connError(err, conn); });\r\n        conn.on('close', () => { this._connClose(conn); });\r\n    }\r\n\r\n    _connError(err, conn) {\r\n        console.error(err);\r\n    }\r\n    _connClose(conn) {\r\n        console.error(\"conn closed\");\r\n    }\r\n\r\n    _onJSONData(data, conn) {\r\n        switch (data.type) {\r\n            case EventTypes.Request_File_Infos: {\r\n                const message = {\r\n                    type: EventTypes.Response_File_INfos,\r\n                    payload: Array.from(this.outgoing, function (f) { return { name: f.name, size: f.size, type: f.type, peer: this.id }; }, this.peer),\r\n                };\r\n                conn.send(message);\r\n            } break;\r\n            case EventTypes.Response_File_INfos: {\r\n                let pair = this.pairs[conn.peer];\r\n                if (pair.incoming) {\r\n                    for (let f of data.payload) {\r\n                        let inc = pair.incoming.find(i => i.name === f.name);\r\n                        if (!inc) {\r\n                            pair.incoming.push(f);\r\n                        }\r\n                    }\r\n                } else {\r\n                    pair.incoming = data.payload;\r\n                }\r\n\r\n                this.emit(PeerEvents.Info_Got, conn.peer, data.payload);\r\n            } break;\r\n\r\n            case EventTypes.Request_File_Chunk: {\r\n                this._sendFileChunk(data.payload, conn);\r\n            } break;\r\n            case EventTypes.Response_File_Chunk: {\r\n                this._receiveFileChunk(data.payload, conn);\r\n            } break;\r\n            default: console.error('Unknown message: ' + data);\r\n        }\r\n    }\r\n\r\n    _requestFileChunk(remoteId, fileInfo, chunkIndex) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            const message = {\r\n                type: EventTypes.Request_File_Chunk,\r\n                payload: {\r\n                    fileInfo: {\r\n                        name: fileInfo.name,\r\n                    },\r\n                    index: chunkIndex\r\n                },\r\n            };\r\n            conn.send(message);\r\n        });\r\n    }\r\n\r\n    _receiveFileChunk(payload, conn) {\r\n        let { index, fileInfo, data, last } = payload;\r\n        let iFile = this.pairs[conn.peer].incoming.find(f => f.name === fileInfo.name);\r\n        iFile.file.append(data, (speed, progress) => {\r\n            if (last) {\r\n                iFile.file.close();\r\n                this.emit(PeerEvents.File_Got, iFile);\r\n            }\r\n            else {\r\n                this.emit(PeerEvents.File_Progress, iFile, speed, progress);\r\n\r\n                this._requestFileChunk(conn.peer, fileInfo, index + 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    _sendFileChunk(payload, conn) {\r\n        const reader = new FileReader();\r\n\r\n        let fileInfo = payload.fileInfo;\r\n        let index = payload.index;\r\n        let blob = this.outgoing.find(f => f.name === fileInfo.name);\r\n        let isLastChunk = false;\r\n        let start = index * this.CHUNK_SIZE;\r\n        let end = start + this.CHUNK_SIZE;\r\n        if (end >= blob.size) {\r\n            end = blob.size;\r\n            isLastChunk = true;\r\n        }\r\n        let slice = blob.slice || blob.mozSlice || blob.webkitSlice;\r\n        let slicedBlob = slice.call(blob, start, end);\r\n\r\n        reader.onload = function (event) {\r\n            if (reader.readyState !== FileReader.DONE) {\r\n                return;\r\n            }\r\n            const blockBuffer = event.target.result;\r\n            const message = {\r\n                type: EventTypes.Response_File_Chunk,\r\n                payload: {\r\n                    index: index,\r\n                    fileInfo: fileInfo,\r\n                    data: blockBuffer,\r\n                    last: isLastChunk,\r\n                },\r\n            };\r\n            conn.send(message);\r\n        }\r\n        reader.readAsArrayBuffer(slicedBlob);\r\n    }\r\n\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 117;","import React from 'react';\r\nimport { Button, LinearProgress, TextField, Typography, List, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Folder from '@material-ui/icons/Folder';\r\nimport Download from '@material-ui/icons/CloudDownload';\r\nimport MyPeer from '../services/MyPeer';\r\nimport { PeerEvents } from '../services/MyEnums';\r\n\r\nclass MyFileReceiver extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.remoteId = props.match.params.id;\r\n\r\n        this.myPeer = null;\r\n        this.state = {\r\n            peerFiles: []\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.myPeer = new MyPeer();\r\n        this.initializeMyPeer();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.myPeer.abortFiles();\r\n    }\r\n\r\n    initializeMyPeer() {\r\n        this.myPeer.on(PeerEvents.Peer_Opened, (selfId) => {\r\n            console.log(selfId);\r\n        });\r\n        this.myPeer.on(PeerEvents.Info_Got, (peerId, files) => {\r\n            console.log(files);\r\n            this.setState({ peerFiles: files });\r\n        });\r\n        this.myPeer.on(PeerEvents.File_Progress, (fileInfo, speed, progress) => {\r\n            console.log(`Speed: ${speed}; Progress: ${progress}`);\r\n        });\r\n        this.myPeer.on(PeerEvents.File_Got, (fileInfo) => {\r\n            let f = this.state.peerFiles.find(f => f.name === fileInfo.name);\r\n            f.downloading = false;\r\n            this.setState({});\r\n            console.log(\"finished\");\r\n        });\r\n    }\r\n\r\n    retriveFileInfos(event) {\r\n        this.myPeer.requestFileInfos(this.remoteId);\r\n    }\r\n\r\n    downloadFile(event, fileInfo) {\r\n        console.log(fileInfo);\r\n        fileInfo.downloading = true;\r\n        this.setState({});\r\n        this.myPeer.downloadFile(this.remoteId, fileInfo);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" component=\"span\" className={classes.button}\r\n                    color=\"primary\" onClick={this.retriveFileInfos.bind(this)}>\r\n                    Retrive Files\r\n                </Button>\r\n                {\r\n                    this.state.peerFiles && this.state.peerFiles.length &&\r\n                    this.renderFileInfos()\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderFileInfos() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {this.remoteId}\r\n                </Typography>\r\n                <div className={classes.paperBackground}>\r\n                    <List dense={true} >\r\n                        {\r\n                            this.state.peerFiles.map((f) => {\r\n                                return (\r\n                                    <ListItem key={f.name}>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <Folder></Folder>\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={f.name} secondary={f.size}>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton edge=\"end\" aria-label=\"Download\"\r\n                                                disabled={!!f.downloading}\r\n                                                onClick={(event) => { this.downloadFile(event, f) }}>\r\n                                                <Download></Download>\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>)\r\n                            })\r\n                        }\r\n                    </List>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    buttonInput: {\r\n        display: 'none',\r\n    },\r\n\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n\r\n    paperBackground: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MyFileReceiver);","export class EventTypes {\r\n    static Request_File_Infos = 'request_file_infos';\r\n    static Response_File_INfos = 'response_file_infos';\r\n    static Request_File_Chunk = 'request_download_file_chunk';\r\n    static Response_File_Chunk = 'response_download_file_chunk';\r\n};\r\n\r\nexport class PeerEvents {\r\n    static Peer_Opened = 'peer_opened';\r\n    static Info_Got = 'info_got';\r\n    static File_Got = 'file_got';\r\n    static File_Progress = 'file_progress';\r\n}\r\n"],"sourceRoot":""}