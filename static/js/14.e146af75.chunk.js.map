{"version":3,"sources":["components/MySpider.js"],"names":["MySpider","props","_this","Object","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","dht","_init","DHT","listen","on","console","log","peer","infoHash","from","concat","node","err","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","React","Component","withStyles","theme","withTheme"],"mappings":"+KAIMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,IAAM,KAEXP,EAAKQ,QALUR,uEASfG,KAAKI,IAAM,IAAIE,SACfN,KAAKI,IAAIG,SACTP,KAAKI,IAAII,GAAG,QAAS,WACjBC,QAAQC,IAAI,WAEhBV,KAAKI,IAAII,GAAG,YAAa,WACrBC,QAAQC,IAAI,eAEhBV,KAAKI,IAAII,GAAG,OAAQ,SAACG,EAAMC,EAAUC,GACjCJ,QAAQC,IAAR,GAAAI,OAAeH,EAAf,KAAAG,OAAuBF,EAAvB,KAAAE,OAAmCD,MAEvCb,KAAKI,IAAII,GAAG,WAAY,SAACG,EAAMC,GAC3BH,QAAQC,IAAR,GAAAI,OAAeH,EAAf,KAAAG,OAAuBF,MAE3BZ,KAAKI,IAAII,GAAG,OAAQ,SAACO,GACjBN,QAAQC,IAAIK,KAEhBf,KAAKI,IAAII,GAAG,UAAW,SAACQ,GACpBP,QAAQC,IAAIM,KAEhBhB,KAAKI,IAAII,GAAG,QAAS,SAACQ,GAClBP,QAAQC,IAAIM,sCAMIhB,KAAKJ,MAAjBqB,QAER,OAAQC,EAAAC,EAAAC,cAAA,wBAvCOC,IAAMC,WAgDdC,sBAJA,SAAAC,GAAK,MAAK,IAIS,CAAEC,WAAW,GAAhCF,CAAwC5B","file":"static/js/14.e146af75.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Client as DHT} from 'bittorrent-dht';\r\n\r\nclass MySpider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dht = null;\r\n\r\n        this._init();\r\n    }\r\n\r\n    _init(){\r\n        this.dht = new DHT();\r\n        this.dht.listen();\r\n        this.dht.on('ready', ()=>{\r\n            console.log(\"ready\");\r\n        });\r\n        this.dht.on('listening', () =>{\r\n            console.log('listening');\r\n        });\r\n        this.dht.on('peer', (peer, infoHash, from) =>{\r\n            console.log(`${peer},${infoHash},${from}`);\r\n        });\r\n        this.dht.on('announce', (peer, infoHash)=>{\r\n            console.log(`${peer},${infoHash}`);\r\n        });\r\n        this.dht.on('node', (node)=>{\r\n            console.log(node);\r\n        });\r\n        this.dht.on('warning', (err)=>{\r\n            console.log(err);\r\n        });\r\n        this.dht.on('error', (err)=>{\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (<div>ok</div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n   \r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MySpider);"],"sourceRoot":""}