{"version":3,"sources":["services/MyFile.js","services/MyPeer.js","../node_modules/peerjs/dist sync","components/MyFileSharer.js","services/MyEnums.js"],"names":["MyFile","options","Object","classCallCheck","this","size","name","lastAppendTime","Date","received","buffer","data","done","push","byteLength","speed","_calculateSpeed","progress","_calculateProgress","rec","Blob","saveAs","time","milliseconds","getTime","MyPeer","_this","possibleConstructorReturn","getPrototypeOf","call","CHUNK_SIZE","peer","pairs","outgoing","messageCache","_initializePeer","alert","window","peerjs","util","browser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","pair","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","incoming","ic","file","abort","err","return","remoteId","_ensureConnection","conn","console","log","EventTypes","Request_File_Infos","open","message","type","send","PeerEvents","Info_Got","fileInfo","inc","find","f","assign","transferringFile","_requestFile","files","_this2","_loop","i","item","findIndex","o","length","Peer","debug","config","iceServers","urls","credential","username","on","_peerOpen","bind","_peerConnection","_peerDisconnected","_peerClose","_peerError","id","emit","Peer_Opened","_this3","_initializeConnection","_ClearCachedMessages","error","callback","connect","openCallback","_this4","_onArrayBuffer","_onJSONData","_connError","_connClose","_receiveFile","Response_File_INfos","payload","Array","from","_SendMessage","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop2","_iterator3","Request_File","_sendFile","_this5","iFile","_this6","append","close","File_Got","File_Progress","_this7","reader","FileReader","blob","sliceFunc","slice","mozSlice","webkitSlice","offset","onload","event","readyState","DONE","blockBuffer","target","result","readSlice","sliced","readAsArrayBuffer","messages","_this8","forEach","EventEmitter","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","MyFileSharer","props","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","textFieldRef","React","createRef","state","receiverUrl","myPeer","initializeMyPeer","selfId","setState","concat","location","setOutgingFiles","select","document","execCommand","snackbarOpen","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","buttonInput","multiple","onChange","selectFile","htmlFor","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","variant","component","button","color","map","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","label","placeholder","margin","fullWidth","inputRef","disabled","onClick","oCopy","Component","withStyles","theme","spacing","display","withTheme","Response_File"],"mappings":"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","file":"static/js/10.619b0706.chunk.js","sourcesContent":["//import streamSaver from 'streamsaver';\r\nimport {saveAs} from 'file-saver';\r\n\r\nexport default class MyFile {\r\n    constructor(options) {\r\n        this.size = options.size;\r\n        this.name = options.name;\r\n\r\n        this.lastAppendTime = new Date();\r\n        this.received = 0;\r\n\r\n        // this.fileStream = null;\r\n        // this.writer = null;\r\n        this.buffer = [];\r\n        \r\n    }\r\n\r\n    append(data, done) {\r\n\r\n        this.buffer.push(data);\r\n        this.received += data.byteLength;\r\n        let speed = this._calculateSpeed(data.byteLength);\r\n        let progress = this._calculateProgress();\r\n\r\n        done && done(speed, progress, this.received);\r\n\r\n        // this._ensureFileStreamWriter((writer) => {\r\n        //     const blob = new Blob([data]);\r\n        //     const readableStream = blob.stream();\r\n        //     const reader = readableStream.getReader();\r\n        //     const pump = () => reader.read()\r\n        //         .then(res => {\r\n        //             if (res.done) {\r\n        //                 this.received += data.byteLength;\r\n        //                 let speed = this._calculateSpeed();\r\n        //                 let progress = this._calculateProgress(data.byteLength);\r\n        //                 done(speed, progress, this.received);\r\n        //             } else {\r\n        //                 writer.write(res.value).then(pump);\r\n        //             }\r\n        //         });\r\n\r\n        //     pump();\r\n        // });\r\n    }\r\n\r\n    close() {\r\n        const rec = new Blob(this.buffer);\r\n        this.buffer = [];\r\n\r\n        saveAs(rec, this.name);\r\n        // if (this.writer) {\r\n        //     this.writer.close();\r\n        //     this.writer = null;\r\n        // }\r\n    }\r\n\r\n    abort() {\r\n        this.buffer = [];\r\n        // if (this.writer) {\r\n        //     this.fileStream.abort();\r\n        //     this.writer.abort();\r\n        // }\r\n    }\r\n\r\n    _calculateProgress() {\r\n        let progress = 100 * this.received / this.size;\r\n\r\n        return progress;\r\n    }\r\n\r\n    _calculateSpeed(byteLength) {\r\n        let time = new Date();\r\n        let milliseconds = time.getTime() - this.lastAppendTime.getTime();\r\n\r\n        this.lastAppendTime = time;\r\n\r\n        let speed = 1000 * byteLength / milliseconds;\r\n\r\n        return speed;\r\n    }\r\n\r\n    // _ensureFileStreamWriter(callback) {\r\n    //     if (this.writer) {\r\n    //         callback && callback(this.writer);\r\n    //     } else {\r\n    //         this._polifill(() => {\r\n    //             streamSaver.WritableStream = window.WritableStream || window.WebStreamsPolyfill.WritableStream;\r\n    //             this.fileStream = streamSaver.createWriteStream(\r\n    //                 this.name,\r\n    //                 { size: this.size, }\r\n    //             );\r\n    //             this.writer = this.fileStream.getWriter();\r\n    //             callback && callback(this.writer);\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    // _polifill(callback) {\r\n    //     if (callback.done) {\r\n    //         callback();\r\n    //     } else {\r\n    //         Object.defineProperty(Blob.prototype, 'stream', {\r\n    //             configurable: true,\r\n    //             enumerable: true,\r\n    //             writable: true,\r\n    //             value: function stream() {\r\n    //                 return new Response(this).body;\r\n    //             }\r\n    //         });\r\n\r\n    //         let js = document.createElement('script');\r\n    //         js.setAttribute('src', 'https://cdn.jsdelivr.net/npm/web-streams-polyfill@2.0.2/dist/ponyfill.min.js');\r\n    //         js.async = true;\r\n    //         js.onreadystatechange = js.onload = () => {\r\n    //             if (!callback.done && (!js.readyState || /loaded|complete/.test(js.readyState))) {\r\n    //                 callback.done = true;\r\n    //                 callback();\r\n    //             }\r\n    //         };\r\n    //         document.getElementsByTagName('head')[0].appendChild(js);\r\n    //     }\r\n    // }\r\n}","import { EventEmitter } from 'eventemitter3';\r\nimport Peer from 'peerjs';\r\n\r\nimport { EventTypes, PeerEvents } from './MyEnums';\r\nimport MyFile from './MyFile';\r\n\r\nexport default class MyPeer extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.CHUNK_SIZE = 500 * 1024;\r\n\r\n        this.peer = null;\r\n        this.pairs = {};\r\n        this.outgoing = [];\r\n        this.messageCache = {};\r\n\r\n        this._initializePeer();\r\n\r\n        alert(window.peerjs.util.browser);\r\n    }\r\n\r\n    //publics\r\n\r\n    abortFiles() {\r\n        for (let pair of this.pairs.values()) {\r\n            for (let ic of pair.incoming) {\r\n                if (ic.file) {\r\n                    ic.abort();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    requestFileInfos(remoteId) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            console.log(\"Sending \" + EventTypes.Request_File_Infos + conn.open);\r\n            const message = {\r\n                type: EventTypes.Request_File_Infos,\r\n            };\r\n            conn.send(message);\r\n        });\r\n\r\n        return PeerEvents.Info_Got;\r\n    }\r\n\r\n    downloadFile(remoteId, fileInfo) {\r\n        let inc = this.pairs[remoteId].incoming.find(f => f.name === fileInfo.name);\r\n        Object.assign(inc, {\r\n            file: new MyFile({ name: inc.name, size: inc.size }),\r\n        });\r\n        this.pairs[remoteId].transferringFile = inc;\r\n\r\n        this._requestFile(remoteId, fileInfo);\r\n    }\r\n\r\n    setOutgingFiles(files) {\r\n        if (files) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files.item(i);\r\n                if (this.outgoing.findIndex(o => o.name == f.name) < 0) {\r\n                    this.outgoing.push(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //privates\r\n    _initializePeer() {\r\n        this.peer = new Peer(null, {\r\n            debug: 3,\r\n            config: {\r\n                'iceServers': [\r\n                    { urls: 'stun:stun.l.google.com:19302' },\r\n                    {\r\n                        urls: 'turn:numb.viagenie.ca',\r\n                        credential: 'muazkh',\r\n                        username: 'webrtc@live.com'\r\n                    },\r\n                    {\r\n                        urls: 'turn:192.158.29.39:3478?transport=udp',\r\n                        credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                        username: '28224511:1379330808'\r\n                    },\r\n                    {\r\n                        urls: 'turn:192.158.29.39:3478?transport=tcp',\r\n                        credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                        username: '28224511:1379330808'\r\n                    }\r\n                ],\r\n            },\r\n        });\r\n\r\n        this.peer.on('open', this._peerOpen.bind(this));\r\n        this.peer.on('connection', this._peerConnection.bind(this));\r\n        this.peer.on('disconnected', this._peerDisconnected.bind(this));\r\n        this.peer.on('close', this._peerClose.bind(this));\r\n        this.peer.on('error', this._peerError.bind(this));\r\n    }\r\n    _peerOpen(id) {\r\n        this.emit(PeerEvents.Peer_Opened, id);\r\n    }\r\n    _peerConnection(conn) {\r\n        let pair = this.pairs[conn.peer];\r\n        if (!pair || !pair.conn || !pair.conn.open) {\r\n            this.pairs[conn.peer] = { conn };\r\n            console.log(\"_peerConnection \" + conn.open);\r\n            this._initializeConnection(conn, (conn) => {\r\n                this._ClearCachedMessages(conn);\r\n            });\r\n        }\r\n    }\r\n    _peerDisconnected() { }\r\n    _peerClose() { }\r\n    _peerError(err) {\r\n        console.error(\"Peer error \" + err.type);\r\n        console.error(err);\r\n    }\r\n\r\n    _ensureConnection(remoteId, callback) {\r\n        let pair = this.pairs[remoteId];\r\n        if (!pair) {\r\n            this.pairs[remoteId] = {};\r\n            pair = this.pairs[remoteId];\r\n        }\r\n        if (!pair.conn || !pair.conn.open) {\r\n            pair.conn = this.peer.connect(remoteId)\r\n            console.log(\"this.peer.connect\" + pair.conn.open);\r\n            this._initializeConnection(pair.conn, callback);\r\n            return;\r\n        } else {\r\n            callback && callback(pair.conn);\r\n        }\r\n    }\r\n    _initializeConnection(conn, openCallback) {\r\n        conn.on('open', () => {\r\n            console.log(\"conn opened\");\r\n            openCallback && openCallback(conn);\r\n        });\r\n        conn.on('data', (data) => {\r\n            if (data.byteLength) {\r\n                this._onArrayBuffer(data, conn);\r\n            } else {\r\n                this._onJSONData(data, conn);\r\n            }\r\n        });\r\n        conn.on('error', (err) => { this._connError(err, conn); });\r\n        conn.on('close', () => { this._connClose(conn); });\r\n    }\r\n\r\n    _connError(err, conn) {\r\n        console.error(err);\r\n    }\r\n    _connClose(conn) {\r\n        console.error(\"conn closed\");\r\n    }\r\n\r\n    _onArrayBuffer(data, conn) {\r\n        let file = this.pairs[conn.peer].transferringFile;\r\n        this._receiveFile(file, data);\r\n    }\r\n\r\n    _onJSONData(data, conn) {\r\n        console.log(\"_onJSONData \" + data.type + conn.open);\r\n        switch (data.type) {\r\n            case EventTypes.Request_File_Infos: {\r\n                const message = {\r\n                    type: EventTypes.Response_File_INfos,\r\n                    payload: Array.from(this.outgoing, function (f) { return { name: f.name, size: f.size, type: f.type, peer: this.id }; }, this.peer),\r\n                };\r\n                this._SendMessage(conn, message);\r\n            } break;\r\n            case EventTypes.Response_File_INfos: {\r\n                let pair = this.pairs[conn.peer];\r\n                if (pair.incoming) {\r\n                    for (let f of data.payload) {\r\n                        let inc = pair.incoming.find(i => i.name === f.name);\r\n                        if (!inc) {\r\n                            pair.incoming.push(f);\r\n                        }\r\n                    }\r\n                } else {\r\n                    pair.incoming = data.payload;\r\n                }\r\n\r\n                this.emit(PeerEvents.Info_Got, conn.peer, data.payload);\r\n            } break;\r\n\r\n            case EventTypes.Request_File: {\r\n                this._sendFile(data.payload, conn);\r\n            } break;\r\n            default: console.error('Unknown message: ' + data);\r\n        }\r\n    }\r\n\r\n    _requestFile(remoteId, fileInfo) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            const message = {\r\n                type: EventTypes.Request_File,\r\n                payload: {\r\n                    fileInfo: {\r\n                        name: fileInfo.name\r\n                    },\r\n                },\r\n            };\r\n\r\n            this._SendMessage(conn, message);\r\n        });\r\n    }\r\n\r\n    _receiveFile(iFile, data) {\r\n        iFile.file.append(data, (speed, progress, received) => {\r\n            if (received >= iFile.size) {//transfer end\r\n                iFile.file.close();\r\n                this.emit(PeerEvents.File_Got, iFile);\r\n            } else {\r\n                this.emit(PeerEvents.File_Progress, iFile, speed, progress);\r\n            }\r\n        });\r\n    }\r\n\r\n    _sendFile(payload, conn) {\r\n        const reader = new FileReader();\r\n\r\n        let fileInfo = payload.fileInfo;\r\n        let blob = this.outgoing.find(f => f.name === fileInfo.name);\r\n        let sliceFunc = blob.slice || blob.mozSlice || blob.webkitSlice;\r\n        let offset = 0;\r\n\r\n        reader.onload = (event) => {\r\n            if (reader.readyState !== FileReader.DONE) {\r\n                return;\r\n            }\r\n            const blockBuffer = event.target.result;\r\n            this._SendMessage(conn, blockBuffer);\r\n\r\n            offset += blockBuffer.byteLength;\r\n            if (offset < blob.size) {\r\n                readSlice(offset);\r\n            }\r\n        }\r\n\r\n        const readSlice = o => {\r\n            const sliced = sliceFunc.call(blob, o, o + this.CHUNK_SIZE);\r\n            reader.readAsArrayBuffer(sliced);\r\n        };\r\n\r\n        readSlice(0);\r\n    }\r\n\r\n    _SendMessage(conn, message) {\r\n        if (conn.open) {\r\n            conn.send(message);\r\n        } else {\r\n            let messages = this.messageCache[conn.peer];\r\n            if (!messages) {\r\n                messages = this.messageCache[conn.peer] = [];\r\n            }\r\n            messages.push(message);\r\n        }\r\n    }\r\n    _ClearCachedMessages(conn) {\r\n        let messages = this.messageCache[conn.peer];\r\n        if (messages) {\r\n            (messages).forEach(message => {\r\n                this._SendMessage(conn, message);\r\n            });\r\n        }\r\n    }\r\n\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 133;","import React from 'react';\r\nimport { Button, LinearProgress, TextField } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MyPeer from '../services/MyPeer';\r\nimport {PeerEvents} from '../services/MyEnums';\r\n\r\nclass MyFileSharer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textFieldRef = React.createRef();\r\n\r\n        this.state = {\r\n            progress: 0,\r\n            receiverUrl: '',\r\n            outgoing: [],\r\n        };\r\n\r\n        this.myPeer = null;\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.myPeer = new MyPeer();\r\n        this.initializeMyPeer();\r\n    }\r\n\r\n    initializeMyPeer(){\r\n        this.myPeer.on(PeerEvents.Peer_Opened, (selfId)=>{\r\n             console.log(selfId);\r\n             this.setState({receiverUrl: `${window.location}/${selfId}`});\r\n        });\r\n    }\r\n\r\n    selectFile(event){\r\n        let files = event.target.files;\r\n        this.myPeer.setOutgingFiles(files);\r\n        this.setState({outgoing: this.myPeer.outgoing});\r\n    }\r\n    oCopy(event) {\r\n        if (this.textFieldRef && this.textFieldRef.value) {\r\n            this.textFieldRef.select();\r\n            document.execCommand(\"Copy\");\r\n            this.setState({ snackbarOpen: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n               <input\r\n                    id=\"button-file\"\r\n                    className={classes.buttonInput}\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.selectFile.bind(this)}\r\n                ></input>\r\n                <label htmlFor=\"button-file\">\r\n                    <Button variant=\"contained\" component=\"span\" className={classes.button} color=\"primary\">\r\n                        Select Files\r\n                    </Button>\r\n                </label>\r\n                {\r\n                    this.state.outgoing && this.state.outgoing.map((f) =>{\r\n                        return <div>{f.name}</div>\r\n                    })\r\n                }\r\n                <TextField\r\n                    label=\"Receiver Url\"\r\n                    placeholder=\"Receiver Url\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    value={this.state.receiverUrl}\r\n                    inputRef={i => { this.textFieldRef = i; }}\r\n                ></TextField>\r\n\r\n                <Button variant=\"contained\" component=\"span\" className={classes.button} \r\n                    color=\"primary\" disabled={!this.state.receiverUrl} onClick={this.oCopy.bind(this)}>\r\n                        Copy Receiver Url\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    buttonInput: {\r\n        display: 'none',\r\n    },\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MyFileSharer);","export class EventTypes {\r\n    static Request_File_Infos = 'request_file_infos';\r\n    static Response_File_INfos = 'response_file_infos';\r\n    static Request_File = 'request_download_file';\r\n    static Response_File = 'response_download_file';\r\n};\r\n\r\nexport class PeerEvents {\r\n    static Peer_Opened = 'peer_opened';\r\n    static Info_Got = 'info_got';\r\n    static File_Got = 'file_got';\r\n    static File_Progress = 'file_progress';\r\n}\r\n"],"sourceRoot":""}