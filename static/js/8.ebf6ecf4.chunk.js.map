{"version":3,"sources":["services/MyFile.js","services/MyPeer.js","../node_modules/peerjs/dist sync","components/MyFileReceiver.js","services/MyEnums.js"],"names":["MyFile","options","Object","classCallCheck","this","size","name","lastAppendTime","Date","received","fileStream","writer","data","done","_this","_ensureFileStreamWriter","reader","Blob","stream","getReader","pump","read","then","res","speed","_calculateSpeed","byteLength","progress","_calculateProgress","write","value","close","abort","time","milliseconds","getTime","callback","_this2","_polifill","streamSaver","WritableStream","window","WebStreamsPolyfill","createWriteStream","getWriter","defineProperty","prototype","configurable","enumerable","writable","Response","body","js","document","createElement","setAttribute","async","onreadystatechange","onload","readyState","test","getElementsByTagName","appendChild","MyPeer","possibleConstructorReturn","getPrototypeOf","call","CHUNK_SIZE","peer","pairs","outgoing","messageCache","_initializePeer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","pair","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","incoming","ic","file","err","return","remoteId","_ensureConnection","conn","console","log","EventTypes","Request_File_Infos","open","message","type","send","PeerEvents","Info_Got","fileInfo","inc","find","f","assign","_requestFileChunk","files","_loop","i","item","findIndex","o","push","length","Peer","debug","config","iceServers","urls","credential","username","on","_peerOpen","bind","_peerConnection","_peerDisconnected","_peerClose","_peerError","id","emit","Peer_Opened","_this3","_initializeConnection","_ClearCachedMessages","error","connect","openCallback","_this4","_onJSONData","_connError","_connClose","Response_File_INfos","payload","Array","from","_SendMessage","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop2","_iterator3","Request_File_Chunk","_sendFileChunk","Response_File_Chunk","_receiveFileChunk","chunkIndex","_this5","index","_this6","last","iFile","append","File_Got","File_Progress","FileReader","blob","isLastChunk","start","end","slicedBlob","slice","mozSlice","webkitSlice","event","DONE","blockBuffer","target","result","readAsArrayBuffer","_this7","forEach","EventEmitter","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","MyFileReceiver","props","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","match","params","myPeer","state","peerFiles","initializeMyPeer","abortFiles","selfId","peerId","setState","concat","downloading","requestFileInfos","downloadFile","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","variant","component","className","button","color","onClick","retriveFileInfos","renderFileInfos","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","title","paperBackground","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","dense","map","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","key","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_Folder__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","primary","secondary","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","edge","aria-label","disabled","_material_ui_icons_CloudDownload__WEBPACK_IMPORTED_MODULE_17___default","React","Component","withStyles","theme","margin","spacing","buttonInput","display","backgroundColor","palette","background","paper","withTheme"],"mappings":"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","file":"static/js/8.ebf6ecf4.chunk.js","sourcesContent":["import streamSaver from 'streamsaver';\r\n\r\nexport default class MyFile {\r\n    constructor(options) {\r\n        this.size = options.size;\r\n        this.name = options.name;\r\n\r\n        this.lastAppendTime = new Date();\r\n        this.received = 0;\r\n\r\n        this.fileStream = null;\r\n        this.writer = null;\r\n    }\r\n\r\n    append(data, done) {\r\n        this._ensureFileStreamWriter((writer) => {\r\n            const blob = new Blob([data]);\r\n            const readableStream = blob.stream();\r\n            const reader = readableStream.getReader();\r\n            const pump = () => reader.read()\r\n                .then(res => {\r\n                    if (res.done) {\r\n                        let speed = this._calculateSpeed(data.byteLength);\r\n                        let progress = this._calculateProgress(data.byteLength);\r\n                        done(speed, progress);\r\n                    } else {\r\n                        writer.write(res.value).then(pump);\r\n                    }\r\n                });\r\n\r\n            pump();\r\n        });\r\n    }\r\n\r\n    close() {\r\n        if (this.writer) {\r\n            this.writer.close();\r\n            this.writer = null;\r\n        }\r\n    }\r\n\r\n    abort() {\r\n        if (this.writer) {\r\n            this.fileStream.abort();\r\n            this.writer.abort();\r\n        }\r\n    }\r\n\r\n    _calculateProgress(byteLength) {\r\n        this.received += byteLength;\r\n        let progress = 100 * this.received / this.size;\r\n\r\n        return progress;\r\n    }\r\n\r\n    _calculateSpeed(byteLength) {\r\n        let time = new Date();\r\n        let milliseconds = time.getTime() - this.lastAppendTime.getTime();\r\n\r\n        this.lastAppendTime = time;\r\n\r\n        let speed = 1000 * byteLength / milliseconds;\r\n\r\n        return speed;\r\n    }\r\n\r\n    _ensureFileStreamWriter(callback) {\r\n        if (this.writer) {\r\n            callback && callback(this.writer);\r\n        } else {\r\n            this._polifill(() => {\r\n                streamSaver.WritableStream = window.WritableStream || window.WebStreamsPolyfill.WritableStream;\r\n                this.fileStream = streamSaver.createWriteStream(\r\n                    this.name,\r\n                    { size: this.size, }\r\n                );\r\n                this.writer = this.fileStream.getWriter();\r\n                callback && callback(this.writer);\r\n            });\r\n        }\r\n    }\r\n\r\n    _polifill(callback) {\r\n        if (callback.done) {\r\n            callback();\r\n        } else {\r\n            Object.defineProperty(Blob.prototype, 'stream', {\r\n                configurable: true,\r\n                enumerable: true,\r\n                writable: true,\r\n                value: function stream() {\r\n                    return new Response(this).body;\r\n                }\r\n            });\r\n\r\n            let js = document.createElement('script');\r\n            js.setAttribute('src', 'https://cdn.jsdelivr.net/npm/web-streams-polyfill@2.0.2/dist/ponyfill.min.js');\r\n            js.async = true;\r\n            js.onreadystatechange = js.onload = () => {\r\n                if (!callback.done && (!js.readyState || /loaded|complete/.test(js.readyState))) {\r\n                    callback.done = true;\r\n                    callback();\r\n                }\r\n            };\r\n            document.getElementsByTagName('head')[0].appendChild(js);\r\n        }\r\n    }\r\n}","import { EventEmitter } from 'eventemitter3';\r\nimport Peer from 'peerjs';\r\n\r\nimport { EventTypes, PeerEvents } from './MyEnums';\r\nimport MyFile from './MyFile';\r\n\r\nexport default class MyPeer extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.CHUNK_SIZE = 500 * 1024;\r\n\r\n        this.peer = null;\r\n        this.pairs = {};\r\n        this.outgoing = [];\r\n        this.messageCache = {};\r\n\r\n        this._initializePeer();\r\n    }\r\n\r\n    //publics\r\n\r\n    abortFiles() {\r\n        for (let pair of this.pairs.values()) {\r\n            for (let ic of pair.incoming) {\r\n                if (ic.file) {\r\n                    ic.abort();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    requestFileInfos(remoteId) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            console.log(\"Sending \" + EventTypes.Request_File_Infos + conn.open);\r\n            const message = {\r\n                type: EventTypes.Request_File_Infos,\r\n            };\r\n            conn.send(message);\r\n        });\r\n\r\n        return PeerEvents.Info_Got;\r\n    }\r\n\r\n    downloadFile(remoteId, fileInfo) {\r\n        let inc = this.pairs[remoteId].incoming.find(f => f.name === fileInfo.name);\r\n        Object.assign(inc, {\r\n            file: new MyFile({ name: inc.name, size: inc.size }),\r\n        });\r\n\r\n        this._requestFileChunk(remoteId, fileInfo, 0);\r\n    }\r\n\r\n    setOutgingFiles(files) {\r\n        if (files) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files.item(i);\r\n                if (this.outgoing.findIndex(o => o.name == f.name) < 0) {\r\n                    this.outgoing.push(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //privates\r\n    _initializePeer() {\r\n        this.peer = new Peer(null, {\r\n            debug: 3,\r\n            config: {\r\n                'iceServers': [\r\n                    { urls: 'stun:stun.l.google.com:19302' },\r\n                    {\r\n                        urls: 'turn:numb.viagenie.ca',\r\n                        credential: 'muazkh',\r\n                        username: 'webrtc@live.com'\r\n                    },\r\n                    {\r\n                        urls: 'turn:192.158.29.39:3478?transport=udp',\r\n                        credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                        username: '28224511:1379330808'\r\n                    },\r\n                    {\r\n                        urls: 'turn:192.158.29.39:3478?transport=tcp',\r\n                        credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\r\n                        username: '28224511:1379330808'\r\n                    }\r\n                ],\r\n            },\r\n        });\r\n\r\n        this.peer.on('open', this._peerOpen.bind(this));\r\n        this.peer.on('connection', this._peerConnection.bind(this));\r\n        this.peer.on('disconnected', this._peerDisconnected.bind(this));\r\n        this.peer.on('close', this._peerClose.bind(this));\r\n        this.peer.on('error', this._peerError.bind(this));\r\n    }\r\n    _peerOpen(id) {\r\n        this.emit(PeerEvents.Peer_Opened, id);\r\n    }\r\n    _peerConnection(conn) {\r\n        let pair = this.pairs[conn.peer];\r\n        if (!pair || !pair.conn || !pair.conn.open) {\r\n            this.pairs[conn.peer] = { conn };\r\n            console.log(\"_peerConnection \" + conn.open);\r\n            this._initializeConnection(conn, (conn) =>{\r\n                this._ClearCachedMessages(conn);\r\n            });\r\n        }\r\n    }\r\n    _peerDisconnected() { }\r\n    _peerClose() { }\r\n    _peerError(err) {\r\n        console.error(\"Peer error \" + err.type);\r\n        console.error(err);\r\n    }\r\n\r\n    _ensureConnection(remoteId, callback) {\r\n        let pair = this.pairs[remoteId];\r\n        if (!pair) {\r\n            this.pairs[remoteId] = {};\r\n            pair = this.pairs[remoteId];\r\n        }\r\n        if (!pair.conn || !pair.conn.open) {\r\n            pair.conn = this.peer.connect(remoteId)\r\n            console.log(\"this.peer.connect\" + pair.conn.open);\r\n            this._initializeConnection(pair.conn, callback);\r\n            return;\r\n        }else{\r\n            callback && callback(pair.conn);\r\n        }\r\n    }\r\n    _initializeConnection(conn, openCallback) {\r\n        conn.on('open', () => {\r\n            console.log(\"conn opened\");\r\n            openCallback && openCallback(conn);\r\n        });\r\n        conn.on('data', (data) => {\r\n            this._onJSONData(data, conn);\r\n        });\r\n        conn.on('error', (err) => { this._connError(err, conn); });\r\n        conn.on('close', () => { this._connClose(conn); });\r\n    }\r\n\r\n    _connError(err, conn) {\r\n        console.error(err);\r\n    }\r\n    _connClose(conn) {\r\n        console.error(\"conn closed\");\r\n    }\r\n\r\n    _onJSONData(data, conn) {\r\n        console.log(\"_onJSONData \" + data.type + conn.open);\r\n        switch (data.type) {\r\n            case EventTypes.Request_File_Infos: {\r\n                const message = {\r\n                    type: EventTypes.Response_File_INfos,\r\n                    payload: Array.from(this.outgoing, function (f) { return { name: f.name, size: f.size, type: f.type, peer: this.id }; }, this.peer),\r\n                };\r\n                this._SendMessage(conn, message);\r\n            } break;\r\n            case EventTypes.Response_File_INfos: {\r\n                let pair = this.pairs[conn.peer];\r\n                if (pair.incoming) {\r\n                    for (let f of data.payload) {\r\n                        let inc = pair.incoming.find(i => i.name === f.name);\r\n                        if (!inc) {\r\n                            pair.incoming.push(f);\r\n                        }\r\n                    }\r\n                } else {\r\n                    pair.incoming = data.payload;\r\n                }\r\n\r\n                this.emit(PeerEvents.Info_Got, conn.peer, data.payload);\r\n            } break;\r\n\r\n            case EventTypes.Request_File_Chunk: {\r\n                this._sendFileChunk(data.payload, conn);\r\n            } break;\r\n            case EventTypes.Response_File_Chunk: {\r\n                this._receiveFileChunk(data.payload, conn);\r\n            } break;\r\n            default: console.error('Unknown message: ' + data);\r\n        }\r\n    }\r\n\r\n    _requestFileChunk(remoteId, fileInfo, chunkIndex) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            const message = {\r\n                type: EventTypes.Request_File_Chunk,\r\n                payload: {\r\n                    fileInfo: {\r\n                        name: fileInfo.name,\r\n                    },\r\n                    index: chunkIndex\r\n                },\r\n            };\r\n            this._SendMessage(conn, message);\r\n        });\r\n    }\r\n\r\n    _receiveFileChunk(payload, conn) {\r\n        let { index, fileInfo, data, last } = payload;\r\n        let iFile = this.pairs[conn.peer].incoming.find(f => f.name === fileInfo.name);\r\n        iFile.file.append(data, (speed, progress) => {\r\n            if (last) {\r\n                iFile.file.close();\r\n                this.emit(PeerEvents.File_Got, iFile);\r\n            }\r\n            else {\r\n                this.emit(PeerEvents.File_Progress, iFile, speed, progress);\r\n\r\n                this._requestFileChunk(conn.peer, fileInfo, index + 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    _sendFileChunk(payload, conn) {\r\n        const reader = new FileReader();\r\n\r\n        let fileInfo = payload.fileInfo;\r\n        let index = payload.index;\r\n        let blob = this.outgoing.find(f => f.name === fileInfo.name);\r\n        let isLastChunk = false;\r\n        let start = index * this.CHUNK_SIZE;\r\n        let end = start + this.CHUNK_SIZE;\r\n        if (end >= blob.size) {\r\n            end = blob.size;\r\n            isLastChunk = true;\r\n        }\r\n        let slice = blob.slice || blob.mozSlice || blob.webkitSlice;\r\n        let slicedBlob = slice.call(blob, start, end);\r\n\r\n        reader.onload = function (event) {\r\n            if (reader.readyState !== FileReader.DONE) {\r\n                return;\r\n            }\r\n            const blockBuffer = event.target.result;\r\n            const message = {\r\n                type: EventTypes.Response_File_Chunk,\r\n                payload: {\r\n                    index: index,\r\n                    fileInfo: fileInfo,\r\n                    data: blockBuffer,\r\n                    last: isLastChunk,\r\n                },\r\n            };\r\n            this._SendMessage(conn, message);\r\n        }\r\n        reader.readAsArrayBuffer(slicedBlob);\r\n    }\r\n\r\n    _SendMessage(conn, message){\r\n        if(conn.open){\r\n            conn.send(message);\r\n        }else{\r\n            this.messageCache[conn.peer].push(message);\r\n        }\r\n    }\r\n    _ClearCachedMessages(conn){\r\n        let messages = this.messageCache[conn.peer];\r\n        (messages).forEach(message => {\r\n            this._SendMessage(conn, message);\r\n        });\r\n    }\r\n\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 117;","import React from 'react';\r\nimport { Button, LinearProgress, TextField, Typography, List, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Folder from '@material-ui/icons/Folder';\r\nimport Download from '@material-ui/icons/CloudDownload';\r\nimport MyPeer from '../services/MyPeer';\r\nimport { PeerEvents } from '../services/MyEnums';\r\n\r\nclass MyFileReceiver extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.remoteId = props.match.params.id;\r\n\r\n        this.myPeer = null;\r\n        this.state = {\r\n            peerFiles: []\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.myPeer = new MyPeer();\r\n        this.initializeMyPeer();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.myPeer.abortFiles();\r\n    }\r\n\r\n    initializeMyPeer() {\r\n        this.myPeer.on(PeerEvents.Peer_Opened, (selfId) => {\r\n            console.log(selfId);\r\n        });\r\n        this.myPeer.on(PeerEvents.Info_Got, (peerId, files) => {\r\n            console.log(files);\r\n            this.setState({ peerFiles: files });\r\n        });\r\n        this.myPeer.on(PeerEvents.File_Progress, (fileInfo, speed, progress) => {\r\n            console.log(`Speed: ${speed}; Progress: ${progress}`);\r\n        });\r\n        this.myPeer.on(PeerEvents.File_Got, (fileInfo) => {\r\n            let f = this.state.peerFiles.find(f => f.name === fileInfo.name);\r\n            f.downloading = false;\r\n            this.setState({});\r\n            console.log(\"finished\");\r\n        });\r\n    }\r\n\r\n    retriveFileInfos(event) {\r\n        this.myPeer.requestFileInfos(this.remoteId);\r\n    }\r\n\r\n    downloadFile(event, fileInfo) {\r\n        console.log(fileInfo);\r\n        fileInfo.downloading = true;\r\n        this.setState({});\r\n        this.myPeer.downloadFile(this.remoteId, fileInfo);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" component=\"span\" className={classes.button}\r\n                    color=\"primary\" onClick={this.retriveFileInfos.bind(this)}>\r\n                    Retrive Files\r\n                </Button>\r\n                {\r\n                    this.state.peerFiles && this.state.peerFiles.length &&\r\n                    this.renderFileInfos()\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderFileInfos() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {this.remoteId}\r\n                </Typography>\r\n                <div className={classes.paperBackground}>\r\n                    <List dense={true} >\r\n                        {\r\n                            this.state.peerFiles.map((f) => {\r\n                                return (\r\n                                    <ListItem key={f.name}>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <Folder></Folder>\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={f.name} secondary={f.size}>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton edge=\"end\" aria-label=\"Download\"\r\n                                                disabled={!!f.downloading}\r\n                                                onClick={(event) => { this.downloadFile(event, f) }}>\r\n                                                <Download></Download>\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>)\r\n                            })\r\n                        }\r\n                    </List>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    buttonInput: {\r\n        display: 'none',\r\n    },\r\n\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n\r\n    paperBackground: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MyFileReceiver);","export class EventTypes {\r\n    static Request_File_Infos = 'request_file_infos';\r\n    static Response_File_INfos = 'response_file_infos';\r\n    static Request_File_Chunk = 'request_download_file_chunk';\r\n    static Response_File_Chunk = 'response_download_file_chunk';\r\n};\r\n\r\nexport class PeerEvents {\r\n    static Peer_Opened = 'peer_opened';\r\n    static Info_Got = 'info_got';\r\n    static File_Got = 'file_got';\r\n    static File_Progress = 'file_progress';\r\n}\r\n"],"sourceRoot":""}