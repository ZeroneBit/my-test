{"version":3,"sources":["services/MyFile.js","services/MyPeer.js","../node_modules/peerjs/dist sync","components/MyFileSharer.js","services/MyEnums.js"],"names":["MyFile","options","Object","classCallCheck","this","size","name","create","fileStream","streamSaver","createWriteStream","writer","getWriter","data","console","log","length","write","close","MyPeer","_this","possibleConstructorReturn","getPrototypeOf","call","CHUNK_SIZE","peer","pairs","outgoing","_initializePeer","remoteId","_ensureConnection","conn","open","message","type","EventTypes","Request_File_Infos","send","PeerEvents","Info_Got","fileInfo","inc","incoming","find","f","assign","file","_requestFileChunk","files","_this2","_loop","i","item","findIndex","o","push","Peer","debug","confi","iceServers","url","credential","username","on","_peerOpen","bind","_peerConnection","_peerDisconnected","_peerClose","_peerError","id","emit","Peer_Opened","pair","_initializeConnection","err","error","callback","connect","openCallback","_this3","undefined","byteLength","_onJSONData","_connError","_connClose","Response_File_INfos","payload","Array","from","Request_File_Chunk","_sendFileChunk","Response_File_Chunk","_receiveFileChunk","chunkIndex","index","last","append","File_Got","File_Progress","reader","FileReader","blob","isLastChunk","start","end","slicedBlob","slice","mozSlice","webkitSlice","onload","event","readyState","DONE","blockBuffer","target","result","readAsArrayBuffer","EventEmitter","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","MyFileSharer","props","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","textFieldRef","React","createRef","state","progress","receiverUrl","myPeer","initializeMyPeer","selfId","setState","concat","window","location","setOutgingFiles","value","select","document","execCommand","snackbarOpen","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","buttonInput","multiple","onChange","selectFile","htmlFor","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","variant","component","button","color","map","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","label","placeholder","margin","fullWidth","inputRef","disabled","onClick","oCopy","Component","withStyles","theme","spacing","display","withTheme"],"mappings":"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","file":"static/js/9.94343bfa.chunk.js","sourcesContent":["import streamSaver from 'streamsaver';\r\n\r\nexport default class MyFile {\r\n    constructor(options) {\r\n\r\n        this.size = options.size;\r\n        this.name = options.name;\r\n\r\n        this.create = true;\r\n        this.fileStream = streamSaver.createWriteStream(this.name, {\r\n            size: this.size,\r\n        });\r\n        this.writer = this.fileStream.getWriter();\r\n    }\r\n\r\n    append(data) {\r\n        console.log(data.length);\r\n        this.writer.write(data);\r\n    }\r\n\r\n    close(){\r\n        this.writer.close();\r\n    }\r\n\r\n\r\n\r\n    _reset() {\r\n\r\n    }\r\n}","import { EventEmitter } from 'eventemitter3';\r\nimport Peer from 'peerjs';\r\n\r\nimport { EventTypes, PeerEvents } from './MyEnums';\r\nimport MyFile from './MyFile';\r\n\r\nexport default class MyPeer extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.CHUNK_SIZE = 16 * 1024 * 1024;\r\n\r\n        this.peer = null;\r\n        this.pairs = {};\r\n        this.outgoing = [];\r\n\r\n        this._initializePeer();\r\n    }\r\n\r\n    //publics\r\n\r\n    requestFileInfos(remoteId) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            console.log(\"sending request \" + conn.open);\r\n            const message = {\r\n                type: EventTypes.Request_File_Infos,\r\n            };\r\n            conn.send(message);\r\n        });\r\n\r\n        return PeerEvents.Info_Got;\r\n    }\r\n\r\n    downloadFile(remoteId, fileInfo) {\r\n        let inc = this.pairs[remoteId].incoming.find(f => f.name === fileInfo.name);\r\n        Object.assign(inc, {\r\n            file: new MyFile({ name: inc.name, size: inc.size }),\r\n        });\r\n\r\n        this._requestFileChunk(remoteId, fileInfo, 0);\r\n    }\r\n\r\n    setOutgingFiles(files) {\r\n        if (files) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files.item(i);\r\n                if (this.outgoing.findIndex(o => o.name == f.name) < 0) {\r\n                    this.outgoing.push(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //privates\r\n    _initializePeer() {\r\n        this.peer = new Peer(null, {\r\n            debug: 3,\r\n            confi: {\r\n                'iceServers': [\r\n                    { url: 'stun:stun.services.mozilla.com' },\r\n                    { url: 'turn:numb.viagenie.ca', credential: 'muazkh', username: 'webrtc@live.com' }\r\n                ],\r\n            },\r\n        });\r\n\r\n        this.peer.on('open', this._peerOpen.bind(this));\r\n        this.peer.on('connection', this._peerConnection.bind(this));\r\n        this.peer.on('disconnected', this._peerDisconnected.bind(this));\r\n        this.peer.on('close', this._peerClose.bind(this));\r\n        this.peer.on('error', this._peerError.bind(this));\r\n    }\r\n    _peerOpen(id) {\r\n        this.emit(PeerEvents.Peer_Opened, id);\r\n    }\r\n    _peerConnection(conn) {\r\n        let pair = this.pairs[conn.peer];\r\n        if (!pair || !pair.conn || !pair.conn.open) {\r\n            this.pairs[conn.peer] = { conn };\r\n            console.log(\"_peerConnection \" + conn.open);\r\n            this._initializeConnection(conn);\r\n        }\r\n    }\r\n    _peerDisconnected() { }\r\n    _peerClose() { }\r\n    _peerError(err) {\r\n        console.error(\"Peer error \" + err.type);\r\n        console.error(err);\r\n    }\r\n\r\n    _ensureConnection(remoteId, callback) {\r\n        let pair = this.pairs[remoteId];\r\n        if (!pair) {\r\n            this.pairs[remoteId] = {};\r\n            pair = this.pairs[remoteId];\r\n        }\r\n        if (!pair.conn || !pair.conn.open) {\r\n            pair.conn = this.peer.connect(remoteId)\r\n            console.log(\"this.peer.connect\" + pair.conn.open);\r\n            this._initializeConnection(pair.conn, callback);\r\n            return;\r\n        }\r\n\r\n        callback && callback(pair.conn);\r\n    }\r\n    _initializeConnection(conn, openCallback) {\r\n        conn.on('open', () => {\r\n            console.log(\"conn opened\");\r\n            openCallback && openCallback(conn);\r\n        });\r\n        conn.on('data', (data) => {\r\n            if (data.byteLength !== undefined) {\r\n\r\n            } else {\r\n                this._onJSONData(data, conn);\r\n            }\r\n        });\r\n        conn.on('error', (err) => { this._connError(err, conn); });\r\n        conn.on('close', () => { this._connClose(conn); });\r\n    }\r\n\r\n    _connError(err, conn) {\r\n        console.error(err);\r\n    }\r\n    _connClose(conn) {\r\n        console.error(\"conn closed\");\r\n    }\r\n\r\n    _onJSONData(data, conn) {\r\n        switch (data.type) {\r\n            case EventTypes.Request_File_Infos: {\r\n                const message = {\r\n                    type: EventTypes.Response_File_INfos,\r\n                    payload: Array.from(this.outgoing, function (f) { return { name: f.name, size: f.size, type: f.type, peer: this.id }; }, this.peer),\r\n                };\r\n                conn.send(message);\r\n            } break;\r\n            case EventTypes.Response_File_INfos: {\r\n                let pair = this.pairs[conn.peer];\r\n                pair.incoming = data.payload;\r\n\r\n                this.emit(PeerEvents.Info_Got, conn.peer, data.payload);\r\n            } break;\r\n\r\n            case EventTypes.Request_File_Chunk: {\r\n                this._sendFileChunk(data.payload, conn);\r\n            } break;\r\n            case EventTypes.Response_File_Chunk: {\r\n                this._receiveFileChunk(data.payload, conn);\r\n            } break;\r\n            default: console.error('Unknown message: ' + data);\r\n        }\r\n    }\r\n\r\n    _requestFileChunk(remoteId, fileInfo, chunkIndex) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            console.log(\"download file \" + conn.open);\r\n            const message = {\r\n                type: EventTypes.Request_File_Chunk,\r\n                payload: { \r\n                    fileInfo: {\r\n                        name: fileInfo.name,\r\n                    }, \r\n                    index: chunkIndex },\r\n            };\r\n            conn.send(message);\r\n        });\r\n    }\r\n\r\n    _receiveFileChunk(payload, conn) {\r\n        let { index, fileInfo, data, last } = payload;\r\n        let inc = this.pairs[conn.peer].incoming.find(f => f.name === fileInfo.name);\r\n        inc.file.append(data);\r\n        if (last) {\r\n            inc.file.close();\r\n            this.emit(PeerEvents.File_Got, fileInfo);\r\n        }\r\n        else {\r\n            this.emit(PeerEvents.File_Progress, fileInfo, index * this.CHUNK_SIZE);\r\n\r\n            this._requestFileChunk(conn.peer, fileInfo, index + 1);\r\n        }\r\n    }\r\n\r\n    _sendFileChunk(payload, conn) {\r\n        const reader = new FileReader();\r\n\r\n        let fileInfo = payload.fileInfo;\r\n        let index = payload.index;\r\n        let blob = this.outgoing.find(f => f.name === fileInfo.name);\r\n        let isLastChunk = false;\r\n        let start = index * this.CHUNK_SIZE;\r\n        let end = start + this.CHUNK_SIZE;\r\n        if (end >= blob.size) {\r\n            end = blob.size;\r\n            isLastChunk = true;\r\n        }\r\n        let slice = blob.slice || blob.mozSlice || blob.webkitSlice;\r\n        let slicedBlob = slice.call(blob, start, end);\r\n\r\n        reader.onload = function (event) {\r\n            if(reader.readyState !== FileReader.DONE){\r\n                return;\r\n            }\r\n            const blockBuffer = event.target.result;\r\n            const message = {\r\n                type: EventTypes.Response_File_Chunk,\r\n                payload: {\r\n                    index: index,\r\n                    fileInfo: fileInfo,\r\n                    data: blockBuffer,\r\n                    last: isLastChunk,\r\n                },\r\n            };\r\n            conn.send(message);\r\n        }\r\n        reader.readAsArrayBuffer(slicedBlob);\r\n    }\r\n\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 117;","import React from 'react';\r\nimport { Button, LinearProgress, TextField } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MyPeer from '../services/MyPeer';\r\nimport {PeerEvents} from '../services/MyEnums';\r\n\r\nclass MyFileSharer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textFieldRef = React.createRef();\r\n\r\n        this.state = {\r\n            progress: 0,\r\n            receiverUrl: '',\r\n            outgoing: [],\r\n        };\r\n\r\n        this.myPeer = null;\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.myPeer = new MyPeer();\r\n        this.initializeMyPeer();\r\n    }\r\n\r\n    initializeMyPeer(){\r\n        this.myPeer.on(PeerEvents.Peer_Opened, (selfId)=>{\r\n             console.log(selfId);\r\n             this.setState({receiverUrl: `${window.location}/${selfId}`});\r\n        });\r\n    }\r\n\r\n    selectFile(event){\r\n        let files = event.target.files;\r\n        this.myPeer.setOutgingFiles(files);\r\n        this.setState({outgoing: this.myPeer.outgoing});\r\n    }\r\n    oCopy(event) {\r\n        if (this.textFieldRef && this.textFieldRef.value) {\r\n            this.textFieldRef.select();\r\n            document.execCommand(\"Copy\");\r\n            this.setState({ snackbarOpen: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n               <input\r\n                    id=\"button-file\"\r\n                    className={classes.buttonInput}\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.selectFile.bind(this)}\r\n                ></input>\r\n                <label htmlFor=\"button-file\">\r\n                    <Button variant=\"contained\" component=\"span\" className={classes.button} color=\"primary\">\r\n                        Select Files\r\n                    </Button>\r\n                </label>\r\n                {\r\n                    this.state.outgoing && this.state.outgoing.map((f) =>{\r\n                        return <div>{f.name}</div>\r\n                    })\r\n                }\r\n                <TextField\r\n                    label=\"Receiver Url\"\r\n                    placeholder=\"Receiver Url\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    value={this.state.receiverUrl}\r\n                    inputRef={i => { this.textFieldRef = i; }}\r\n                ></TextField>\r\n\r\n                <Button variant=\"contained\" component=\"span\" className={classes.button} \r\n                    color=\"primary\" disabled={!this.state.receiverUrl} onClick={this.oCopy.bind(this)}>\r\n                        Copy Receiver Url\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    buttonInput: {\r\n        display: 'none',\r\n    },\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MyFileSharer);","export class EventTypes {\r\n    static Request_File_Infos = 'request_file_infos';\r\n    static Response_File_INfos = 'response_file_infos';\r\n    static Request_File_Chunk = 'request_download_file_chunk';\r\n    static Response_File_Chunk = 'response_download_file_chunk';\r\n};\r\n\r\nexport class PeerEvents {\r\n    static Peer_Opened = 'peer_opened';\r\n    static Info_Got = 'info_got';\r\n    static File_Got = 'file_got';\r\n    static File_Progress = 'file_progress';\r\n}\r\n"],"sourceRoot":""}