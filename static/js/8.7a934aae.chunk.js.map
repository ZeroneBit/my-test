{"version":3,"sources":["services/MyFile.js","services/MyPeer.js","../node_modules/peerjs/dist sync","components/MyFileReceiver.js","services/MyEnums.js"],"names":["MyFile","options","Object","classCallCheck","this","_polifill","size","name","create","fileStream","streamSaver","createWriteStream","writer","getWriter","lastAppendTime","Date","received","data","done","_this","reader","Blob","stream","getReader","pump","read","then","res","speed","_calculateSpeed","byteLength","progress","_calculateProgress","write","value","close","abort","time","milliseconds","getTime","defineProperty","prototype","configurable","enumerable","writable","Response","body","js","document","createElement","setAttribute","async","getElementsByTagName","appendChild","MyPeer","possibleConstructorReturn","getPrototypeOf","call","CHUNK_SIZE","peer","pairs","outgoing","_initializePeer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","pair","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","incoming","ic","file","err","return","remoteId","_ensureConnection","conn","message","type","EventTypes","Request_File_Infos","send","PeerEvents","Info_Got","fileInfo","inc","find","f","assign","_requestFileChunk","files","_this2","_loop","i","item","findIndex","o","push","length","Peer","debug","confi","iceServers","url","credential","username","on","_peerOpen","bind","_peerConnection","_peerDisconnected","_peerClose","_peerError","id","emit","Peer_Opened","open","console","log","_initializeConnection","error","callback","connect","openCallback","_this3","_onJSONData","_connError","_connClose","Response_File_INfos","payload","Array","from","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop2","_iterator3","Request_File_Chunk","_sendFileChunk","Response_File_Chunk","_receiveFileChunk","chunkIndex","index","_this4","last","iFile","append","File_Got","File_Progress","FileReader","blob","isLastChunk","start","end","slicedBlob","slice","mozSlice","webkitSlice","onload","event","readyState","DONE","blockBuffer","target","result","readAsArrayBuffer","EventEmitter","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","MyFileReceiver","props","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","match","params","myPeer","state","peerFiles","initializeMyPeer","abortFiles","selfId","peerId","setState","concat","downloading","requestFileInfos","downloadFile","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","variant","component","className","button","color","onClick","retriveFileInfos","renderFileInfos","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","title","paperBackground","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","dense","map","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","key","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_Folder__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","primary","secondary","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","edge","aria-label","disabled","_material_ui_icons_CloudDownload__WEBPACK_IMPORTED_MODULE_17___default","React","Component","withStyles","theme","margin","spacing","buttonInput","display","backgroundColor","palette","background","paper","withTheme"],"mappings":"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","file":"static/js/8.7a934aae.chunk.js","sourcesContent":["import streamSaver from 'streamsaver';\r\n\r\nexport default class MyFile {\r\n    constructor(options) {\r\n\r\n        this._polifill();\r\n\r\n        this.size = options.size;\r\n        this.name = options.name;\r\n\r\n        this.create = true;\r\n        this.fileStream = streamSaver.createWriteStream(\r\n            this.name,\r\n            { size: this.size, }\r\n        );\r\n        this.writer = this.fileStream.getWriter();\r\n        this.lastAppendTime = new Date();\r\n        this.received = 0;\r\n    }\r\n\r\n    append(data, done) {\r\n        const blob = new Blob([data]);\r\n        const readableStream = blob.stream();\r\n        const reader = readableStream.getReader();\r\n        const pump = () => reader.read()\r\n            .then(res => {\r\n                if (res.done) {\r\n                    let speed = this._calculateSpeed(data.byteLength);\r\n                    let progress = this._calculateProgress(data.byteLength);\r\n                    done(speed, progress);\r\n                } else {\r\n                    this.writer.write(res.value).then(pump);\r\n                }\r\n            });\r\n\r\n        pump();\r\n    }\r\n\r\n    close() {\r\n        if (this.writer) {\r\n            this.writer.close();\r\n            this.writer = null;\r\n        }\r\n    }\r\n\r\n    abort() {\r\n        if (this.writer) {\r\n            this.fileStream.abort();\r\n            this.writer.abort();\r\n        }\r\n    }\r\n\r\n    _calculateProgress(byteLength) {\r\n        this.received += byteLength;\r\n        let progress = 100 * this.received / this.size;\r\n\r\n        return progress;\r\n    }\r\n\r\n    _calculateSpeed(byteLength) {\r\n        let time = new Date();\r\n        let milliseconds = time.getTime() - this.lastAppendTime.getTime();\r\n\r\n        this.lastAppendTime = time;\r\n\r\n        let speed = 1000 * byteLength / milliseconds;\r\n\r\n        return speed;\r\n    }\r\n\r\n    _polifill() {\r\n        Object.defineProperty(Blob.prototype, 'stream', {\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true,\r\n            value: function stream() {\r\n                return new Response(this).body;\r\n            }\r\n        });\r\n\r\n        let js = document.createElement('script');\r\n        js.setAttribute('src', 'https://cdn.jsdelivr.net/npm/web-streams-polyfill@2.0.2/dist/ponyfill.min.js');\r\n        js.async = false;\r\n        document.getElementsByTagName('head')[0].appendChild(js);\r\n    }\r\n}","import { EventEmitter } from 'eventemitter3';\r\nimport Peer from 'peerjs';\r\n\r\nimport { EventTypes, PeerEvents } from './MyEnums';\r\nimport MyFile from './MyFile';\r\n\r\nexport default class MyPeer extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.CHUNK_SIZE = 500 * 1024;\r\n\r\n        this.peer = null;\r\n        this.pairs = {};\r\n        this.outgoing = [];\r\n\r\n        this._initializePeer();\r\n    }\r\n\r\n    //publics\r\n\r\n    abortFiles() {\r\n        for (let pair of this.pairs.values()) {\r\n            for (let ic of pair.incoming) {\r\n                if (ic.file) {\r\n                    ic.abort();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    requestFileInfos(remoteId) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            const message = {\r\n                type: EventTypes.Request_File_Infos,\r\n            };\r\n            conn.send(message);\r\n        });\r\n\r\n        return PeerEvents.Info_Got;\r\n    }\r\n\r\n    downloadFile(remoteId, fileInfo) {\r\n        let inc = this.pairs[remoteId].incoming.find(f => f.name === fileInfo.name);\r\n        Object.assign(inc, {\r\n            file: new MyFile({ name: inc.name, size: inc.size }),\r\n        });\r\n\r\n        this._requestFileChunk(remoteId, fileInfo, 0);\r\n    }\r\n\r\n    setOutgingFiles(files) {\r\n        if (files) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files.item(i);\r\n                if (this.outgoing.findIndex(o => o.name == f.name) < 0) {\r\n                    this.outgoing.push(f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //privates\r\n    _initializePeer() {\r\n        this.peer = new Peer(null, {\r\n            debug: 3,\r\n            confi: {\r\n                'iceServers': [\r\n                    { url: 'stun:stun.services.mozilla.com' },\r\n                    { url: 'turn:numb.viagenie.ca', credential: 'muazkh', username: 'webrtc@live.com' }\r\n                ],\r\n            },\r\n        });\r\n\r\n        this.peer.on('open', this._peerOpen.bind(this));\r\n        this.peer.on('connection', this._peerConnection.bind(this));\r\n        this.peer.on('disconnected', this._peerDisconnected.bind(this));\r\n        this.peer.on('close', this._peerClose.bind(this));\r\n        this.peer.on('error', this._peerError.bind(this));\r\n    }\r\n    _peerOpen(id) {\r\n        this.emit(PeerEvents.Peer_Opened, id);\r\n    }\r\n    _peerConnection(conn) {\r\n        let pair = this.pairs[conn.peer];\r\n        if (!pair || !pair.conn || !pair.conn.open) {\r\n            this.pairs[conn.peer] = { conn };\r\n            console.log(\"_peerConnection \" + conn.open);\r\n            this._initializeConnection(conn);\r\n        }\r\n    }\r\n    _peerDisconnected() { }\r\n    _peerClose() { }\r\n    _peerError(err) {\r\n        console.error(\"Peer error \" + err.type);\r\n        console.error(err);\r\n    }\r\n\r\n    _ensureConnection(remoteId, callback) {\r\n        let pair = this.pairs[remoteId];\r\n        if (!pair) {\r\n            this.pairs[remoteId] = {};\r\n            pair = this.pairs[remoteId];\r\n        }\r\n        if (!pair.conn || !pair.conn.open) {\r\n            pair.conn = this.peer.connect(remoteId)\r\n            console.log(\"this.peer.connect\" + pair.conn.open);\r\n            this._initializeConnection(pair.conn, callback);\r\n            return;\r\n        }\r\n\r\n        callback && callback(pair.conn);\r\n    }\r\n    _initializeConnection(conn, openCallback) {\r\n        conn.on('open', () => {\r\n            console.log(\"conn opened\");\r\n            openCallback && openCallback(conn);\r\n        });\r\n        conn.on('data', (data) => {\r\n            this._onJSONData(data, conn);\r\n        });\r\n        conn.on('error', (err) => { this._connError(err, conn); });\r\n        conn.on('close', () => { this._connClose(conn); });\r\n    }\r\n\r\n    _connError(err, conn) {\r\n        console.error(err);\r\n    }\r\n    _connClose(conn) {\r\n        console.error(\"conn closed\");\r\n    }\r\n\r\n    _onJSONData(data, conn) {\r\n        switch (data.type) {\r\n            case EventTypes.Request_File_Infos: {\r\n                const message = {\r\n                    type: EventTypes.Response_File_INfos,\r\n                    payload: Array.from(this.outgoing, function (f) { return { name: f.name, size: f.size, type: f.type, peer: this.id }; }, this.peer),\r\n                };\r\n                conn.send(message);\r\n            } break;\r\n            case EventTypes.Response_File_INfos: {\r\n                let pair = this.pairs[conn.peer];\r\n                if (pair.incoming) {\r\n                    for (let f of data.payload) {\r\n                        let inc = pair.incoming.find(i => i.name === f.name);\r\n                        if (!inc) {\r\n                            pair.incoming.push(f);\r\n                        }\r\n                    }\r\n                } else {\r\n                    pair.incoming = data.payload;\r\n                }\r\n\r\n                this.emit(PeerEvents.Info_Got, conn.peer, data.payload);\r\n            } break;\r\n\r\n            case EventTypes.Request_File_Chunk: {\r\n                this._sendFileChunk(data.payload, conn);\r\n            } break;\r\n            case EventTypes.Response_File_Chunk: {\r\n                this._receiveFileChunk(data.payload, conn);\r\n            } break;\r\n            default: console.error('Unknown message: ' + data);\r\n        }\r\n    }\r\n\r\n    _requestFileChunk(remoteId, fileInfo, chunkIndex) {\r\n        this._ensureConnection(remoteId, (conn) => {\r\n            const message = {\r\n                type: EventTypes.Request_File_Chunk,\r\n                payload: {\r\n                    fileInfo: {\r\n                        name: fileInfo.name,\r\n                    },\r\n                    index: chunkIndex\r\n                },\r\n            };\r\n            conn.send(message);\r\n        });\r\n    }\r\n\r\n    _receiveFileChunk(payload, conn) {\r\n        let { index, fileInfo, data, last } = payload;\r\n        let iFile = this.pairs[conn.peer].incoming.find(f => f.name === fileInfo.name);\r\n        iFile.file.append(data, (speed, progress) => {\r\n            if (last) {\r\n                iFile.file.close();\r\n                this.emit(PeerEvents.File_Got, iFile);\r\n            }\r\n            else {\r\n                this.emit(PeerEvents.File_Progress, iFile, speed, progress);\r\n\r\n                this._requestFileChunk(conn.peer, fileInfo, index + 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    _sendFileChunk(payload, conn) {\r\n        const reader = new FileReader();\r\n\r\n        let fileInfo = payload.fileInfo;\r\n        let index = payload.index;\r\n        let blob = this.outgoing.find(f => f.name === fileInfo.name);\r\n        let isLastChunk = false;\r\n        let start = index * this.CHUNK_SIZE;\r\n        let end = start + this.CHUNK_SIZE;\r\n        if (end >= blob.size) {\r\n            end = blob.size;\r\n            isLastChunk = true;\r\n        }\r\n        let slice = blob.slice || blob.mozSlice || blob.webkitSlice;\r\n        let slicedBlob = slice.call(blob, start, end);\r\n\r\n        reader.onload = function (event) {\r\n            if (reader.readyState !== FileReader.DONE) {\r\n                return;\r\n            }\r\n            const blockBuffer = event.target.result;\r\n            const message = {\r\n                type: EventTypes.Response_File_Chunk,\r\n                payload: {\r\n                    index: index,\r\n                    fileInfo: fileInfo,\r\n                    data: blockBuffer,\r\n                    last: isLastChunk,\r\n                },\r\n            };\r\n            conn.send(message);\r\n        }\r\n        reader.readAsArrayBuffer(slicedBlob);\r\n    }\r\n\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 117;","import React from 'react';\r\nimport { Button, LinearProgress, TextField, Typography, List, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Folder from '@material-ui/icons/Folder';\r\nimport Download from '@material-ui/icons/CloudDownload';\r\nimport MyPeer from '../services/MyPeer';\r\nimport { PeerEvents } from '../services/MyEnums';\r\n\r\nclass MyFileReceiver extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.remoteId = props.match.params.id;\r\n\r\n        this.myPeer = null;\r\n        this.state = {\r\n            peerFiles: []\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.myPeer = new MyPeer();\r\n        this.initializeMyPeer();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.myPeer.abortFiles();\r\n    }\r\n\r\n    initializeMyPeer() {\r\n        this.myPeer.on(PeerEvents.Peer_Opened, (selfId) => {\r\n            console.log(selfId);\r\n        });\r\n        this.myPeer.on(PeerEvents.Info_Got, (peerId, files) => {\r\n            console.log(files);\r\n            this.setState({ peerFiles: files });\r\n        });\r\n        this.myPeer.on(PeerEvents.File_Progress, (fileInfo, speed, progress) => {\r\n            console.log(`Speed: ${speed}; Progress: ${progress}`);\r\n        });\r\n        this.myPeer.on(PeerEvents.File_Got, (fileInfo) => {\r\n            let f = this.state.peerFiles.find(f => f.name === fileInfo.name);\r\n            f.downloading = false;\r\n            this.setState({});\r\n            console.log(\"finished\");\r\n        });\r\n    }\r\n\r\n    retriveFileInfos(event) {\r\n        this.myPeer.requestFileInfos(this.remoteId);\r\n    }\r\n\r\n    downloadFile(event, fileInfo) {\r\n        console.log(fileInfo);\r\n        fileInfo.downloading = true;\r\n        this.setState({});\r\n        this.myPeer.downloadFile(this.remoteId, fileInfo);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" component=\"span\" className={classes.button}\r\n                    color=\"primary\" onClick={this.retriveFileInfos.bind(this)}>\r\n                    Retrive Files\r\n                </Button>\r\n                {\r\n                    this.state.peerFiles && this.state.peerFiles.length &&\r\n                    this.renderFileInfos()\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderFileInfos() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {this.remoteId}\r\n                </Typography>\r\n                <div className={classes.paperBackground}>\r\n                    <List dense={true} >\r\n                        {\r\n                            this.state.peerFiles.map((f) => {\r\n                                return (\r\n                                    <ListItem key={f.name}>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <Folder></Folder>\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={f.name} secondary={f.size}>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton edge=\"end\" aria-label=\"Download\"\r\n                                                disabled={!!f.downloading}\r\n                                                onClick={(event) => { this.downloadFile(event, f) }}>\r\n                                                <Download></Download>\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>)\r\n                            })\r\n                        }\r\n                    </List>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    buttonInput: {\r\n        display: 'none',\r\n    },\r\n\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n\r\n    paperBackground: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MyFileReceiver);","export class EventTypes {\r\n    static Request_File_Infos = 'request_file_infos';\r\n    static Response_File_INfos = 'response_file_infos';\r\n    static Request_File_Chunk = 'request_download_file_chunk';\r\n    static Response_File_Chunk = 'response_download_file_chunk';\r\n};\r\n\r\nexport class PeerEvents {\r\n    static Peer_Opened = 'peer_opened';\r\n    static Info_Got = 'info_got';\r\n    static File_Got = 'file_got';\r\n    static File_Progress = 'file_progress';\r\n}\r\n"],"sourceRoot":""}