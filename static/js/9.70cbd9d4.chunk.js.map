{"version":3,"sources":["MyTimestamp.js"],"names":["MyTimeStamp","props","_this","Object","D_Test_my_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Test_my_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Test_my_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","time","Moment","utc","inputIndex","ticks","event","value","target","millisecondsSinceEpoch","MediaStreamAudioDestinationNode","console","error","date","setState","unixS","unixMS","unix","valueOf","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_6__","id","className","textField","label","placeholder","color","variant","fullWidth","onChange","unixSChanged","bind","convertToUnixS","unixMsChanged","convertToUnixMs","ticksChanged","convertToTicks","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_8__","utils","MomentUti","inputVariant","timeChanged","ampm","autoOk","format","React","Component","withStyles","theme","margin","spacing","width","display","typography","withTheme"],"mappings":"kNAQMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,KAAMC,IAAOC,MACbC,YAAa,GAGjBX,EAAKY,MAAQ,EAREZ,4EAWNa,GACT,IAAIC,EAAQD,EAAME,OAAOD,MAEzBX,KAAKS,MAAQE,EAEb,IAKIE,GADkBF,EAJL,aACS,IAKtBE,EAAyBC,iCACzBC,QAAQC,MAAM,kBAGlB,IAAIC,EAAOX,IAAOO,GAAwBN,MAE1CP,KAAKkB,SAAS,CAAEb,KAAMY,EAAMT,WAAY,yCAG/BE,GACT,IAAIS,EAAQT,EAAME,OAAOD,MACrBN,EAAOC,IAAe,IAARa,GAAcZ,MAEhCP,KAAKkB,SAAS,CAAEb,KAAMA,EAAMG,WAAY,0CAG9BE,GACV,IAAIU,EAASV,EAAME,OAAOD,MACtBN,EAAOC,IAAgB,EAATc,GAAYb,MAE9BP,KAAKkB,SAAS,CAAEb,KAAMA,EAAMG,WAAY,wCAGhCE,GACRV,KAAKkB,SAAS,CAAEb,KAAMK,EAAOF,WAAY,2CAG9BH,GAEX,OADYC,IAAOD,GAAMgB,+CAGbhB,GAEZ,OADaC,IAAOD,GAAMiB,iDAGfjB,GACX,GAA4B,GAAzBL,KAAKI,MAAMI,WACV,OAAOR,KAAKS,MAQhB,OAL4B,IAEfH,IAAOD,GAAMiB,UAHP,6CASd,IACGC,EAAYvB,KAAKJ,MAAjB2B,QAER,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,GAAG,kBACHC,UAAWN,EAAQO,UACnBC,MAAM,gBACNC,YAAY,gBACZC,MAAM,UACNC,QAAQ,WACRC,WAAS,EACTC,SAAUpC,KAAKqC,aAAaC,KAAKtC,MACjCW,MAAOX,KAAKuC,eAAevC,KAAKI,MAAMC,QAI1CmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,GAAG,mBACHC,UAAWN,EAAQO,UACnBC,MAAM,iBACNC,YAAY,iBACZC,MAAM,UACNC,QAAQ,WACRC,WAAS,EACTC,SAAUpC,KAAKwC,cAAcF,KAAKtC,MAClCW,MAAOX,KAAKyC,gBAAgBzC,KAAKI,MAAMC,QAI3CmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,GAAG,iBACHC,UAAWN,EAAQO,UACnBC,MAAM,aACNC,YAAY,QACZC,MAAM,UACNC,QAAQ,WACRC,WAAS,EACTC,SAAUpC,KAAK0C,aAAaJ,KAAKtC,MACjCW,MAAOX,KAAK2C,eAAe3C,KAAKI,MAAMC,QAI1CmB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAyBC,MAAOC,KAC5BtB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACIG,aAAa,WACbhB,MAAM,WACNF,UAAWN,EAAQO,UACnBE,YAAY,WACZC,MAAM,UACNG,SAAUpC,KAAKgD,YAAYV,KAAKtC,MAChCW,MAAOX,KAAKI,MAAMC,KAElB4C,MAAM,EACNC,QAAQ,EACRC,OAAO,8BACPhB,WAAS,aAhIPiB,IAAMC,WAyJjBC,sBAZA,SAAAC,GAAK,MAAK,CACrBzB,UAAW,CACP0B,OAAQD,EAAME,QAAQ,GACtBC,MAAO,IACPC,QAAS,SAGbC,WAAY,CACRD,QAAS,kBAIiB,CAAEE,WAAW,GAAhCP,CAAwC3D","file":"static/js/9.70cbd9d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUti from '@date-io/moment';\r\nimport Moment from 'moment';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nclass MyTimeStamp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            time: Moment.utc(),\r\n            inputIndex: -1,\r\n        };\r\n\r\n        this.ticks = 0;\r\n    }\r\n\r\n    ticksChanged(event) {\r\n        let value = event.target.value;\r\n\r\n        this.ticks = value;\r\n\r\n        let epochTicks = 621355968000000000;\r\n        let ticksPerMillisecond = 10000;\r\n        let maxDateMilliseconds = 8640000000000000;\r\n\r\n        let ticksSinceEpoch = value - epochTicks;\r\n        let millisecondsSinceEpoch = ticksSinceEpoch / ticksPerMillisecond;\r\n        if (millisecondsSinceEpoch > MediaStreamAudioDestinationNode) {\r\n            console.error(\"Invalid number\");\r\n        }\r\n\r\n        var date = Moment(millisecondsSinceEpoch).utc();;\r\n\r\n        this.setState({ time: date, inputIndex: 2 });\r\n    }\r\n\r\n    unixSChanged(event) {\r\n        let unixS = event.target.value;\r\n        let time = Moment(unixS * 1000).utc();\r\n\r\n        this.setState({ time: time, inputIndex: 0 });\r\n    }\r\n\r\n    unixMsChanged(event) {\r\n        let unixMS = event.target.value;\r\n        let time = Moment(unixMS * 1).utc();\r\n\r\n        this.setState({ time: time, inputIndex: 1 });\r\n    }\r\n\r\n    timeChanged(event) {\r\n        this.setState({ time: event, inputIndex: 3 });\r\n    }\r\n\r\n    convertToUnixS(time) {\r\n        let unixS = Moment(time).unix();\r\n        return unixS;\r\n    }\r\n    convertToUnixMs(time) {\r\n        let unixMs = Moment(time).valueOf();\r\n        return unixMs;\r\n    }\r\n    convertToTicks(time) {\r\n        if(this.state.inputIndex == 2){\r\n            return this.ticks;\r\n        }\r\n        const epochTicks = 621355968000000000;\r\n        const ticksPerMillisecond = 10000;\r\n\r\n        let unixMs = Moment(time).valueOf();\r\n        let ticks = (unixMs * ticksPerMillisecond) + epochTicks;\r\n\r\n        return ticks;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    id=\"unix-s-textarea\"\r\n                    className={classes.textField}\r\n                    label=\"Unix Time (s)\"\r\n                    placeholder=\"Unix Time (s)\"\r\n                    color=\"primary\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    onChange={this.unixSChanged.bind(this)}\r\n                    value={this.convertToUnixS(this.state.time)}\r\n                >\r\n                </TextField>\r\n\r\n                <TextField\r\n                    id=\"unix-ms-textarea\"\r\n                    className={classes.textField}\r\n                    label=\"Unix Time (ms)\"\r\n                    placeholder=\"Unix Time (ms)\"\r\n                    color=\"primary\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    onChange={this.unixMsChanged.bind(this)}\r\n                    value={this.convertToUnixMs(this.state.time)}\r\n                >\r\n                </TextField>\r\n\r\n                <TextField\r\n                    id='ticks-textarea'\r\n                    className={classes.textField}\r\n                    label=\"Time Ticks\"\r\n                    placeholder=\"Ticks\"\r\n                    color=\"primary\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    onChange={this.ticksChanged.bind(this)}\r\n                    value={this.convertToTicks(this.state.time)}\r\n                >\r\n                </TextField>\r\n\r\n                <MuiPickersUtilsProvider utils={MomentUti}>\r\n                    <DateTimePicker\r\n                        inputVariant=\"standard\"\r\n                        label=\"UTC Time\"\r\n                        className={classes.textField}\r\n                        placeholder=\"UTC Time\"\r\n                        color=\"primary\"\r\n                        onChange={this.timeChanged.bind(this)}\r\n                        value={this.state.time}\r\n\r\n                        ampm={false}\r\n                        autoOk={true}\r\n                        format=\"YYYY-MM-DD T HH:mm:ss.SSS Z\"\r\n                        fullWidth\r\n\r\n                    >\r\n                    </DateTimePicker>\r\n                </MuiPickersUtilsProvider>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        margin: theme.spacing(2),\r\n        width: 400,\r\n        display: \"block\",\r\n    },\r\n\r\n    typography: {\r\n        display: \"inline-block\",\r\n    },\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(MyTimeStamp);\r\n\r\n"],"sourceRoot":""}